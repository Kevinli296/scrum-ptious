{"version":3,"sources":["helpers/taskStatus.js","components/Dashboard/ProjectProgress.js","helpers/filterTasksByLastThreeMonths.js","components/Dashboard/IndependentProgress.js","components/Dashboard/EmployeeProgressItem.js","components/Dashboard/EmployeeProgress.js","components/Dashboard/index.js","helpers/getUserNameById.js","helpers/getTaskStatus.js","components/Tasks/ManagerModal.js","components/Tasks/FeedbackList.js","components/Tasks/EmployeeModal.js","components/Tasks/TaskItem.js","components/Tasks/TaskProgress.js","helpers/sortTasks.js","helpers/findTaskItemById.js","components/Tasks/MyTeamItem.js","components/Tasks/MyTeam.js","helpers/filterTasksByUser.js","components/Tasks/index.js","components/Chat/ChatLogItem.js","helpers/getUserById.js","components/Chat/ChatLog.js","components/Chat/MembersListItem.js","components/Chat/MembersList.js","components/Chat/InputBox.js","components/Chat/index.js","hooks/useChat.js","utilities/format-date.js","helpers/getEmployeeName.js","components/Submissions/Feedback.js","components/Submissions/SubmissionItem.js","components/Submissions/SubmissionList.js","components/Submissions/index.js","components/Sidebar/SidebarItem.js","components/Tasks/NewTaskItem.js","components/Sidebar/index.js","components/UserPanel/DeadlineListItem.js","components/UserPanel/DeadlineList.js","helpers/filterDeadlineTasks.js","components/UserPanel/UserInfo.js","components/UserPanel/index.js","components/Login/index.js","components/App.js","hooks/useSocket.js","hooks/useApplicationData.js","hooks/useNotifications.js","hooks/useTasks.js","helpers/findSubmissionByTask.js","index.js"],"names":["taskStatus","status","data","counter","lateTaskStatus","index","is_late","ProjectProgress","props","assignedTasks","teamTasks","inProgressTasks","inReviewTasks","completeTasks","lateTasks","className","labels","datasets","label","backgroundColor","borderColor","hoverBackgroundColor","borderWidth","hoverBorderWidth","height","width","options","maintainAspectRatio","title","display","text","fontSize","fontFamily","legend","position","filterTasksByLastThreeMonths","tasks","userId","monthNames","filteredTasks","i","today","Date","setMonth","getMonth","assigned","inprogress","inreview","completed","late","task","monthCreated","creation_date","month","employee_id","IndependentProgress","independentTasks","lastThreeMonths","userInfo","id","Object","keys","dataset","key","res","complete","borderCapStyle","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","hoverPointBorderWidth","spanGaps","fill","push","scales","yAxes","ticks","beginAtZero","gridLines","color","xAxes","responsive","angleLines","EmployeeProgress","inProgress","inReview","name","scale","useState","setIndex","userData","teamUsers","filter","user","role","map","taskData","team","empID","result","projecttask_id","teamTaskStatus","team_id","defaultIndex","onSelect","Dashboard","getUserNameById","find","getTaskStatus","type","ManagerModal","taskItem","show","handleClose","editTaskItem","deleteTaskItem","error","setError","description","due_date","editMode","setEditMode","newTaskData","setNewTaskData","taskInfo","assignNewUserList","validate","NotificationManager","warning","document","getElementById","focus","Modal","onHide","Header","closeButton","Title","Body","for","local","format","autofocus","value","onChange","event","prev","target","selected","item","locale","showTimeInput","date","tmp","toISOString","onDateChange","dateFormat","Footer","Button","onClick","variant","console","log","confirm","FeedbackList","feedbackItems","tid","feedbacks","reverse","feedback","task_id","filterFeedbackByTask","taskId","feedback_string","submission_date","EmployeeModal","submissions","submitTaskItem","success","TaskItem","setShow","taskClass","classNames","class","onSubmit","preventDefault","TaskProgress","setErrorNotification","moveTask","setTasks","sortedTasks","setSortedTasks","trashVisible","setTrashVisible","useEffect","updated","toReturn","sortTasks","sortedComponents","draggable","draggableId","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","onDragEnd","destination","source","droppableId","findTaskItemById","Number","onBeforeCapture","style","isDraggingOver","droppableProps","placeholder","MyTeamItem","member","selectTasksByUser","avatar","email","phone_number","src","alt","MyTeam","teamMembers","filterTasksByUser","uid","Tasks","selectedTasks","setSelectedTasks","userTasks","ChatLogItem","senderId","sender","message","time_locale","chatItemClass","getUserById","ChatLog","messages","chatInfo","getPrevMessages","visible","setVisible","page","setPage","loader","useRef","container","handleObserver","entities","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","setTimeout","chatBottomClass","expanded","messageComponents","messageData","sender_id","time_iso","MembersListItem","online","imgClass","itemClass","roles","MembersList","onlineUsers","memberComponents","includes","InputBox","sendMessage","setMessage","submitForm","e","autoComplete","onKeyPress","Chat","socket","setMessages","setOnlineUsers","joinMessage","setJoinMessage","emit","lastMsg","length","getLastMessageTime","on","users","username","messagesData","off","now","toLocaleDateString","day","year","toLocaleTimeString","undefined","hour","minute","useChat","getEmployeeName","Feedback","selectedTask","giveFeedback","setUserNotification","setFeedback","handleSubmit","accepted","SubmissionItem","is_viewed","setSelectedTask","SubmisionList","listedTeamTasks","Submissions","SidebarItem","menuClass","setMenu","NewTaskItem","dateNow","setDate","getDate","setHours","setMinutes","createTaskItem","setTaskItem","teamMembersList","onEntered","prevTaskItem","Sidebar","selectedMenu","menuItems","DeadlineListItem","assignedTo","DeadlineList","deadlines","filteredUserDeadlinesByUser","filteredUserDeadlines","filterDeadlineTasks","getTime","1","2","UserInfo","transparent","openFilter","setOpenFilter","state","classList","toggle","href","UserPanel","openPanel","setOpenPanel","isOpen","size","Login","setLogin","loginId","setLoginId","DASHBOARD","App","loginToken","setLoginToken","errorNotification","setSocket","conn","io","close","useSocket","setState","loginData","logout","setSubmissions","shouldAppend","useApplicationData","userNotification","managerNotification","setManagerNotification","info","useNotifications","TASK_STATUS","userToAlert","op","STATUS","toSubmit","submitTaskData","submission","findSubmissionByTask","useTasks","ReactDOM","render"],"mappings":"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","file":"static/js/main.adc08a5c.chunk.js","sourcesContent":["export function taskStatus (status, data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.status === status) {\n      counter += 1\n    }\n  }\n\n  return counter;\n}\n\nexport function lateTaskStatus (data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.is_late === true && index.status !== 3) {\n      counter += 1;\n    }\n  }\n\n  return counter;\n}\n\nexport function teamTaskStatus (data, team, empID) {\n  let result = {\n    assigned: 0,\n    inProgress: 0,\n    inReview: 0,\n    late: 0,\n    complete: 0\n  };\n\n  for (const index of data) {\n    if (index.projecttask_id === team && index.employee_id === empID) {\n      if (index.status === 0) {\n        result.assigned += 1\n      } else if (index.status === 1) {\n        result.inProgress += 1;\n      } else if (index.status === 2) {\n        result.inReview += 1;\n      } else if (index.status === 3) {\n        result.complete += 1;\n      }\n      if (index.is_late === true && index.status !== 3) {\n        result.late += 1;\n      }\n    }\n  }\n\n  return result;\n}\n\n\nexport function changeTaskStatus (data) {\n\n  data.status += 1;\n  return data;\n\n}\n","import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\n// import ProjectProgressListItem from './ProjectProgressListItem';\n\nexport default function ProjectProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.teamTasks);\n  const inProgressTasks = taskStatus(1, props.teamTasks);\n  const inReviewTasks = taskStatus(2, props.teamTasks);\n  const completeTasks = taskStatus(3, props.teamTasks);\n  const lateTasks = lateTaskStatus(props.teamTasks);\n\n\n  return (\n    <div className=\"project-progress\">\n      <Doughnut\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(61, 173, 209, 0.65)',\n                'rgba(92, 92, 183, 0.65)',\n                'rgba(255, 181, 75, 0.65)',\n                'rgba(212, 0, 17, 0.65)',\n                'rgba(148, 203, 179, 0.65)',\n              ],\n              borderColor: [\n                'rgba(61, 173, 209, 1)',\n                'rgba(92, 92, 183, 1)',\n                'rgba(255, 181, 75, 1)',\n                'rgba(212, 0, 17, 1)',\n                'rgba(148, 203, 179, 1)',\n              ],\n              hoverBackgroundColor: [\n                'rgba(61, 173, 209, 0.85)',\n                'rgba(92, 92, 183, 0.85)',\n                'rgba(255, 181, 75, 0.85)',\n                'rgba(212, 0, 17, 0.85)',\n                'rgba(148, 203, 179, 0.85)',\n              ],\n              borderWidth: 1,\n              hoverBorderWidth: 2,\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Project Progress',\n            fontSize: 30,\n            fontFamily: 'Poppins',\n          },\n          legend: {\n            display: true,\n            position: 'bottom'\n          }\n        }}\n      />\n    </div>\n  )\n}","export default function filterTasksByLastThreeMonths(tasks, userId) {\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  const status = [\"assigned\", \"inprogress\", \"inreview\", \"completed\"];\n\n  const filteredTasks = {};\n\n  for (let i = 2; i >= 0; i--) {\n    const today = new Date();\n\n    today.setMonth(today.getMonth() - i);\n    const monthName = monthNames[today.getMonth()];\n    filteredTasks[monthName] = {\n      assigned: 0,\n      inprogress: 0,\n      inreview: 0,\n      completed: 0,\n      late: 0,\n    };\n  }\n\n  for (const task of tasks) {\n    const monthCreated = monthNames[new Date(task.creation_date).getMonth()];\n    \n    for (const month in filteredTasks) {\n      if (month === monthCreated && task.employee_id === userId) {\n        filteredTasks[month][status[task.status]] += 1;\n\n        if (task.is_late) {\n          filteredTasks[month].late++;\n        }\n      }\n    }\n  }\n  return filteredTasks;\n}","import React from 'react';\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\nimport filterTasksByLastThreeMonths from '../../helpers/filterTasksByLastThreeMonths';\n\nexport default function IndependentProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.independentTasks);\n  const inProgressTasks = taskStatus(1, props.independentTasks);\n  const inReviewTasks = taskStatus(2, props.independentTasks);\n  const completeTasks = taskStatus(3, props.independentTasks);\n  const lateTasks = lateTaskStatus(props.independentTasks);\n\n  const lastThreeMonths = filterTasksByLastThreeMonths(props.independentTasks, props.userInfo.id);\n  const month = Object.keys(lastThreeMonths);\n  const dataset = [];\n\n  for (let i = 0; i < 3; i++) {\n    const key = lastThreeMonths[month[i]];\n    const res = {\n      label: month[i],\n      data: [key.assigned, key.inprogress, key.inreview, key.late, key.complete],\n    }\n    if (i === 0) {\n      res.backgroundColor = 'rgba(151, 229, 215, 0.3)'\n      res.borderColor = 'rgba(151, 229, 215, 1)';\n      res.hoverBackgroundColor = 'rgba(151, 229, 215, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(151, 229, 215, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(151, 229, 215, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    if (i === 1) {\n      res.backgroundColor = 'rgba(252, 241, 221, 0.3)';\n      res.borderColor = 'rgba(252, 241, 221, 1)';\n      res.hoverBackgroundColor = 'rgba(252, 241, 221, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(252, 241, 221, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(252, 241, 221, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    if (i === 2) {\n      res.backgroundColor = 'rgba(254, 183, 179, 0.3)';\n      res.borderColor = 'rgba(254, 183, 179, 1)';\n      res.hoverBackgroundColor = 'rgba(254, 183, 179, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(254, 183, 179, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(254, 183, 179, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    dataset.push(res);\n  }\n\n  return (\n    <div className=\"employee-chart\">\n\n      {/* stack em against others */}\n      <div className=\"independent-progress\">\n        <div className=\"bar-chart\">\n          <Bar\n            data={{\n              labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n              datasets: [\n                {\n                  label: '# of tasks',\n                  data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n                  backgroundColor: [\n                    'rgba(61, 173, 209, 0.2)',\n                    'rgba(92, 92, 183, 0.2)',\n                    'rgba(255, 181, 75, 0.2)',\n                    'rgba(212, 0, 17, 0.2)',\n                    'rgba(148, 203, 179, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(61, 173, 209, 1)',\n                    'rgba(92, 92, 183, 1)',\n                    'rgba(255, 181, 75, 1)',\n                    'rgba(212, 0, 17, 1)',\n                    'rgba(148, 203, 179, 1)',\n                  ],\n                  hoverBackgroundColor: [\n                    'rgba(61, 173, 209, 0.5)',\n                    'rgba(92, 92, 183, 0.5)',\n                    'rgba(255, 181, 75, 0.5)',\n                    'rgba(212, 0, 17, 0.5)',\n                    'rgba(148, 203, 179, 0.5)',\n                  ],\n                  borderWidth: 1,\n                  hoverBorderWidth: 2,\n                },\n              ],\n            }}\n            height={400}\n            width={600}\n            options={{\n              maintainAspectRatio: false,\n              title: {\n                display: true,\n                text: 'Your Current Progress',\n                fontSize: 25,\n                fontFamily: 'Poppins'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  },\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }],\n                xAxes: [{\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }]\n              }\n            }}\n          />\n        </div>\n\n        <div className=\"line-chart\">\n          <Line \n            data={{\n              labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n              datasets: dataset,\n            }}\n            height={400}\n            width={600}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              title: {\n                display: true,\n                text: 'Your Past 3 Months',\n                fontSize: 25,\n                fontFamily: 'Poppins'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                angleLines: {\n                  display: false,\n                },\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }],\n                xAxes: [{\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }]\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n \nimport { Doughnut, Bar, Line, Radar } from 'react-chartjs-2';\nimport { TabPanel } from 'react-tabs';\nimport filterTasksByLastThreeMonths from '../../helpers/filterTasksByLastThreeMonths';\n \nexport default function EmployeeProgress(props) {\n \n  const lastThreeMonths = filterTasksByLastThreeMonths(props.teamTasks, props.id);\n  const month = Object.keys(lastThreeMonths);\n  const dataset = [];\n\n  for (let i = 0; i < 3; i++) {\n    const key = lastThreeMonths[month[i]];\n    const res = {\n      label: month[i],\n      data: [key.assigned, key.inprogress, key.inreview, key.late, key.complete],\n    }\n    if (i === 0) {\n      res.backgroundColor = 'rgba(212, 99, 78, 0.3)'\n      res.borderColor = 'rgba(212, 99, 78, 1)';\n      res.hoverBackgroundColor = 'rgba(212, 99, 78, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(212, 99, 78, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(212, 99, 78, 1)';\n      res.hoverPointBorderWidth = '2px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    if (i === 1) {\n      res.backgroundColor = 'rgba(255, 132, 191, 0.3)';\n      res.borderColor = 'rgba(255, 132, 191, 1)';\n      res.hoverBackgroundColor = 'rgba(255, 132, 191, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(255, 132, 191, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(255, 132, 191, 1)';\n      res.hoverPointBorderWidth = '2px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    if (i === 2) {\n      res.backgroundColor = 'rgba(22, 53, 83, 0.3)';\n      res.borderColor = 'rgba(22, 53, 83, 1)';\n      res.hoverBackgroundColor = 'rgba(22, 53, 83, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(22, 53, 83, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(22, 53, 83, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    dataset.push(res);\n  }\n\n  return (\n    <div className=\"employee-progress\">\n      <div className=\"pie-chart\">\n        <Doughnut\n          data={{\n            labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n            datasets: [\n              {\n                label: '# of tasks',\n                data: [props.assigned, props.inProgress, props.inReview, props.late, props.complete],\n                backgroundColor: [\n                  'rgba(61, 173, 209, 0.65)',\n                  'rgba(92, 92, 183, 0.65)',\n                  'rgba(255, 181, 75, 0.65)',\n                  'rgba(212, 0, 17, 0.65)',\n                  'rgba(148, 203, 179, 0.65)',\n                ],\n                borderColor: [\n                  'rgba(61, 173, 209, 1)',\n                  'rgba(92, 92, 183, 1)',\n                  'rgba(255, 181, 75, 1)',\n                  'rgba(212, 0, 17, 1)',\n                  'rgba(148, 203, 179, 1)',\n                ],\n                hoverBackgroundColor: [\n                  'rgba(61, 173, 209, 0.85)',\n                  'rgba(92, 92, 183, 0.85)',\n                  'rgba(255, 181, 75, 0.85)',\n                  'rgba(212, 0, 17, 0.85)',\n                  'rgba(148, 203, 179, 0.85)',\n                ],\n                borderWidth: 1,\n                hoverBorderWidth: 2,\n              }\n            ],\n          }}\n          height={400}\n          width={600}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title: {\n              display: false,\n              text: props.name,\n              fontSize: 25,\n              fontFamily: 'Poppins'\n            },\n            legend: {\n              display: true,\n              position: 'left'\n            }\n          }}\n        />\n      </div>\n\n      <div className=\"radar-chart\">\n        <Radar\n          data={{\n            labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n            datasets: dataset\n          }}\n          height={400}\n          width={600}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title: {\n              display: false,\n              text: props.name,\n              fontSize: 25,\n              fontFamily: 'Poppins'\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            },\n            scale: {\n              angleLines: {\n                display: false,\n              },\n              ticks: {\n                beginAtZero: true,\n              }\n            }\n          }}\n        />\n      </div>\n\n      \n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\n\nimport EmployeeProgressItem from './EmployeeProgressItem';\nimport { teamTaskStatus } from '../../helpers/taskStatus';\n\nexport default function EmployeeProgress(props) {\n  const [index, setIndex] = useState(0);\n  \n  const userData = props.teamUsers.filter(user => user.role !== 1).map((user) => {\n    const taskData = teamTaskStatus(props.teamTasks, user.team_id, user.id);\n\n    return (\n      <TabPanel>\n        <EmployeeProgressItem\n          teamTasks={props.teamTasks}\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          assigned={taskData.assigned}\n          inProgress={taskData.inProgress}\n          inReview={taskData.inReview}\n          late={taskData.late}\n          complete={taskData.complete}\n        />\n      </TabPanel>\n    )\n  })\n\n  return (\n    <Tabs defaultIndex={0} onSelect={index => setIndex(index)} className=\"employee-chart\" >\n      <TabList>\n        { props.teamUsers.filter(user => user.role !== 1).map(user => {\n          return (\n            <Tab>{user.name}</Tab>\n          )\n        }) }\n      </TabList>\n      { userData }\n    </Tabs>\n  )\n}","import React, { useState } from 'react';\n\nimport ProjectProgress from './ProjectProgress';\nimport IndependentProgress from './IndependentProgress';\nimport EmployeeProgress from './EmployeeProgress';\n\nimport '../../styles/Dashboard.css';\n\nexport default function Dashboard(props) {\n  const { tasks, teamTasks, teamUsers, role, userInfo } = props;\n\n  return (\n    <div className='dashboard'>\n      <div className=\"dashboard-top\">\n        <ProjectProgress teamTasks={teamTasks} />\n      </div>\n      <div className=\"dashboard-bottom\">\n      {role === 1 && <EmployeeProgress independentTasks={tasks} teamTasks={teamTasks} teamUsers={teamUsers} />}\n      {role === 2 && <IndependentProgress independentTasks={tasks} userInfo={userInfo} />}\n      </div>\n    </div>\n  )\n}","export default function getUserNameById(teamUsers, id) {\n  return teamUsers.find(user => user.id === id).name;\n}","export default function getTaskStatus(status) {\n  switch(status) {\n    case 0: \n      return { status: \"Assigned\", type: \"info\" }\n      break;\n    case 1:\n      return { status: \"In Progress\", type: \"primary\" }\n      break;\n    case 2:\n      return { status: \"In Review\", type: \"warning\" }\n      break;\n    case 3:\n      return { status: \"Completed\", type: \"success\" }\n      break;\n  }\n}","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { NotificationManager } from 'react-notifications'; \nimport getTaskStatus from '../../helpers/getTaskStatus';\n\nexport default function ManagerModal(props) {\n  const {\n    teamUsers,\n    taskItem,\n    show,\n    handleClose,\n    editTaskItem,\n    deleteTaskItem,\n    error,\n    setError\n  } = props;\n\n  const { \n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const [editMode, setEditMode] = useState(false);\n  const [newTaskData, setNewTaskData] = useState(taskItem);\n  const taskInfo = getTaskStatus(status);\n\n  function reset() {\n    setEditMode(false);\n  }\n\n  const handleDelete = () => {\n    console.log(taskItem);\n    deleteTaskItem(taskItem);\n    handleClose();\n  };\n\n  const handleEditToggle = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  }\n\n  const assignNewUserList = teamUsers.filter(user => user.id !== employee_id && user.role !== 1);\n\n  const onDateChange = (date) => {\n    const tmp = new Date(date).toISOString();\n    setNewTaskData(prev => ({...prev, due_date: tmp}));\n  }\n\n  const getUserNameById = (id) => {\n    return teamUsers.find(user => user.id === id).name;\n  }\n\n  function validate() {\n\n    if (newTaskData.title === \"\") {\n      NotificationManager.warning('Title must be valid', 'Error');\n      return;\n    }\n    if (newTaskData.description === \"\") {\n      NotificationManager.warning('Description must be valid', 'Error');\n      document.getElementById(\"edit-task-description\").focus();\n      return;\n    }\n    if (newTaskData.employee_id === \"\") {\n      NotificationManager.warning('Employee assigned must be valid', 'Error');\n      document.getElementById(\"edit-task-assign\").focus();\n      return;\n    }\n    if (newTaskData.due_date < new Date()) {\n      NotificationManager.warning('Due date cannot be in the past', 'Error');\n      document.getElementById(\"edit-task-date\").focus();\n      return;\n    }\n\n    editTaskItem(newTaskData)\n    reset();\n    handleClose();\n    \n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          { editMode ? newTaskData.title : title }\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        { !editMode && (\n          <>\n            <p>{description}</p>\n            <p>Assigned to: { getUserNameById(employee_id) }</p>\n            <label for=\"viewMode-due_date\">Due on: </label>\n            <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment> \n          </>\n        )}\n\n        { editMode && (\n          <>\n            <label for=\"newTitle\">Title: </label>\n            <input\n              autofocus\n              className=\"form-control edit-task-title\"\n              value={newTaskData.title}\n              onChange={(event) => setNewTaskData(prev => ({...prev, title: event.target.value}))}\n            />\n            <label for=\"newDescription\">Description: </label>\n            <textarea\n              id=\"edit-task-description\"\n              value={newTaskData.description}\n              onChange={(event) => setNewTaskData(prev => ({...prev, description: event.target.value}))}\n              type=\"text\"\n              className=\"form-control\"\n              name=\"newDescription\"\n            />\n            <label for=\"assigned\">Re-assign to:</label>\n            <select\n              id=\"edit-task-assign\"\n              name=\"assigned\"\n              className=\"form-control\"\n              onChange={(event) => setNewTaskData(prev => ({...prev, employee_id: event.target.value}))}\n            >\n              <option selected value={employee_id}>{getUserNameById(employee_id)}</option>\n              { assignNewUserList.map(item => {\n                return (\n                  <option value={item.id}>{item.name}</option>\n                )\n              }) }\n            </select>\n            <label for=\"due_date\">Due date:</label>\n            <DatePicker \n              id=\"edit-task-date\"\n              className=\"form-control\" \n              locale=\"en-US\"\n              selected={new Date(newTaskData.due_date)} \n              showTimeInput\n              onChange={(date) => onDateChange(date)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n\n            />\n          </>\n        )}\n        \n      </Modal.Body>\n      <Modal.Footer>\n          { status !== 3 && (\n            <Button \n              onClick={() => handleEditToggle()}\n              variant=\"warning\"\n            > \n              { editMode ? <>Cancel</> : <>Edit</> } \n            </Button>\n          )}\n        { status !== 3 && <Button variant=\"danger\" onClick={() => handleDelete()}>\n          Delete\n        </Button>\n        }\n        \n        { editMode && \n          <Button confirm variant=\"success\" onClick={() => validate()}>\n            Save\n          </Button> \n        }\n        { !editMode && status === 3 && <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> } \n        { status === 3 && is_late && <span className=\"badge badge-danger\">Late</span> }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nexport default function FeedbackList(props) {\n  const {\n    taskId,\n    feedbacks,\n  } = props;\n\n  const filterFeedbackByTask = (tid, feedbacks) => {\n    const tmp = [...feedbacks];\n\n    const PENDING = \"pending\";\n    return tmp.reverse().filter(feedback => {\n      return feedback.task_id === tid && feedback.status !== PENDING; \n    })\n  };\n\n  const feedbackItems = filterFeedbackByTask(taskId, feedbacks)\n    .map(feedback => {\n      return (\n        <div key={feedback.id}>\n          <p>{feedback.feedback_string}</p>\n          <label for=\"viewMode-due_date\">Submitted on: </label>\n          <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{feedback.submission_date}</Moment>\n          <p>{feedback.status}</p> \n        </div>\n      )\n    })\n\n  return (\n    <div>\n      {feedbackItems}\n    </div>\n  )\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport 'moment-timezone'\n\nimport { Modal, Button } from 'react-bootstrap';\n\nimport FeedbackList from './FeedbackList';\nimport getUserNameById from '../../helpers/getUserNameById';\nimport getTaskStatus from '../../helpers/getTaskStatus';\nimport { NotificationManager } from 'react-notifications';\n\nexport default function EmployeeModal(props) {\n  const {\n    show,\n    handleClose,\n    taskItem,\n    teamUsers,\n    submissions,\n    submitTaskItem,\n  } = props;\n\n  const { \n    id,\n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const handleSubmit= () => {\n    NotificationManager.success('Task sent for review', 'Submitted');\n    handleClose();\n    submitTaskItem(taskItem);\n  }\n\n  const taskInfo = getTaskStatus(status);\n\n  return (<>\n    <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {description}\n    </Modal.Body>\n    <Modal.Body>\n      <p>Assigned to: {getUserNameById(teamUsers, employee_id)}</p>\n      <label for=\"viewMode-due_date\">Due on: </label>\n      <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n      <FeedbackList\n        taskId={id}\n        feedbacks={submissions}\n      />\n    </Modal.Body>\n    <Modal.Footer>\n      { <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> }\n      { is_late && <span className=\"badge badge-danger\">LATE</span> } \n      { status === 1 &&\n          <Button confirm variant=\"primary\" onClick={() => handleSubmit()}>\n            Submit\n          </Button>\n      }\n    </Modal.Footer>\n  </Modal>\n  </>)\n}","import React, { useState } from 'react';\nimport { changeTaskStatus } from '../../helpers/taskStatus';\nimport getUserNameById from '../../helpers/getUserNameById';\nimport classNames from 'classnames';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport 'moment-timezone'\n\nimport ManagerModal from './ManagerModal';\nimport EmployeeModal from './EmployeeModal';\n\n// import { formatDateString } from './utilities/format-date';\n\nexport default function TaskItem(props) {\n  const {\n    role,\n    taskItem,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setError\n  } = props;\n  \n  const { \n    title, \n    description, \n    due_date, \n    creation_date, \n    status, \n    is_late,\n    employee_id\n  } = taskItem;\n  \n  const [show, setShow] = useState(false);\n  \n  const taskClass = classNames(\"task__item\", {\n    'task__item--assigned' : !is_late && status === 0,\n    'task__item--in-progress' : !is_late && status === 1,\n    'task__item--in-review' : !is_late && status === 2,\n    'task__item--in-review-late': is_late && status === 2,\n    'task__item--late': is_late && status !== 2 && status !== 3,\n    'task__item--complete' : status === 3\n  });\n\n  /**\n   *  could store all these fn into a helper file\n   * */\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n\n      <div className={taskClass}\n        onClick={event => setShow(true)}\n      >\n        <h5 className=\"task-item-title\">{title}</h5>\n        <p className=\"task-item-name'\">{getUserNameById(teamUsers, employee_id)}</p>\n        <p className=\"task-item-description\">{description}</p>\n        {/* { is_late && <span className=\"badge badge-danger task-item-badge\">LATE</span> } */}\n        <div className=\"task-item-dates\">\n          <div className=\"card-date\">\n            <label for=\"creation_date\">On: </label>\n            <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n          </div>\n          <div className=\"tas-item-card-date\">\n            <label for=\"due_date\">Due:</label>\n            <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n          </div>\n        </div>\n        <div className=\"task-item-badge-container\">\n          <div className=\"task-item-badge\">\n            { status === 0 && <i class=\"fas fa-people-arrows\"></i> }\n            { status === 1 && <i class=\"fas fa-spinner\"></i> }\n          </div>\n        </div>\n      </div>\n\n      <form\n        onSubmit={event => event.preventDefault()}\n        className=\"form-group\"\n      >\n        { role === 1 &&\n          <ManagerModal \n            teamUsers={teamUsers}\n            taskItem={taskItem}\n            show={show}\n            handleClose={handleClose}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            error={error}\n            setError={setError}\n          />\n        }\n        {role === 2 &&\n          <EmployeeModal\n            show={show}\n            taskItem={taskItem}\n            teamUsers={teamUsers}\n            submissions={submissions}\n            handleClose={handleClose}\n            submitTaskItem={submitTaskItem}\n          />\n        }\n      </form>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport TaskItem from './TaskItem';\nimport sortTasks from '../../helpers/sortTasks';\nimport findTaskItemById from '../../helpers/findTaskItemById';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function TaskProgress(props) {\n  const {\n    role,\n    tasks,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setErrorNotification,\n    moveTask,\n    setTasks\n  } = props;\n\n  // local states\n\n  const [sortedTasks, setSortedTasks] = useState({});\n  const [trashVisible, setTrashVisible] = useState(false);\n\n  useEffect(()=> {\n    const updated = sortTasks(tasks);\n    setSortedTasks(updated);\n  }, [tasks])\n\n  const sortedComponents = {};\n\n  for (const key in sortedTasks) {\n    sortedComponents[key] = sortedTasks[key].map((task, index) => {\n      const draggable = task.status === 3 || task.status === 2 ? true : false;\n      \n      if (task.status !== 3) {\n        return (\n          <Draggable key={task.id} draggableId={\"\" + task.id} index={index} isDragDisabled={draggable} >\n            {(provided, snapshot) => (\n              <div \n                key={task.id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TaskItem \n                  key={task.id}\n                  taskItem={task}\n                  role={role}\n                  submissions={submissions}\n                  editTaskItem={editTaskItem}\n                  deleteTaskItem={deleteTaskItem}\n                  submitTaskItem={submitTaskItem}\n                  teamUsers={teamUsers}\n                  error={error}\n                  setErrorNotification={setErrorNotification}\n                />\n              </div>\n            )}\n          </Draggable>\n        )\n      } else {\n        return (\n          <TaskItem \n            key={task.id}\n            taskItem={task}\n            role={role}\n            submissions={submissions}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            submitTaskItem={submitTaskItem}\n            teamUsers={teamUsers}\n            error={error}\n            setErrorNotification={setErrorNotification}\n          />\n        )\n      }\n    })\n  }\n\n  const { assigned, inProgress, completed } = sortedComponents;\n\n  const onDragEnd = (res) => {\n    setTrashVisible(false);\n    const { destination, source, draggableId, droppableId } = res;\n\n    const task = findTaskItemById(tasks, Number(draggableId));\n    if (!destination) {\n      return;\n    }\n\n    if (role !== 1 && source.droppableId === \"assigned\" && destination.droppableId === \"inProgress\") {\n      console.log(task);\n      moveTask(task, 1);\n          }\n    if (role !== 1 && source.droppableId === \"inProgress\" && destination.droppableId === \"assigned\") {\n      moveTask(task, 0);\n    }\n    if (role === 1 && destination.droppableId === \"trash\") {\n      deleteTaskItem(task);\n    }\n  }\n\n  const onBeforeCapture = () => {\n    setTrashVisible(true);\n  }\n\n  return (\n    <div className=\"task-progress\">\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        onBeforeCapture={onBeforeCapture}\n      >\n\n        <div key=\"assigned\" className=\"task-progress-container-assigned\">\n          <h1>Assigned</h1>\n          <Droppable droppableId=\"assigned\">\n            {(provided, snapshot) => (\n              <div \n                className=\"task-column task-assigned\"\n                key=\"assigned\"\n                index=\"1\"\n                ref={provided.innerRef} \n                style={{backgroundColor: snapshot.isDraggingOver ? 'rgba(61, 173, 209, 0.5)' : 'rgba(61, 173, 209, 0.25)'}}\n                {...provided.droppableProps}\n              >\n                { assigned }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        \n\n        <div key=\"inProgress\" className=\"task-progress-container-inprogress\">\n          <h1>In-Progress</h1>\n          <Droppable droppableId=\"inProgress\">\n            {(provided, snapshot) => (\n              <div \n                className=\"task-column task-inprogress\"\n                key=\"inProgress\"\n                index=\"2\"\n                ref={provided.innerRef} \n                {...provided.droppableProps}\n                style={{backgroundColor: snapshot.isDraggingOver ? 'rgba(92, 92, 183, 0.5)' : 'rgba(92, 92, 183, 0.25)'}}\n              {...provided.droppableProps}\n              >\n                { inProgress }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n\n        { role === 1 && (\n          <div key=\"trash\" className={trashVisible ? \"trash--visible\" : \"trash--hidden\"} >\n            <Droppable droppableId=\"trash\">\n              {(provided, snapshot) => (\n                <div\n                  key=\"trash\"\n                  index=\"3\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <span className=\"trash-icon\"><i class=\"far fa-trash-alt fa-3x\"></i></span>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )} \n      </DragDropContext>\n\n      <div className=\"task-progress-container-completed\">\n        <h1>Completed</h1>\n        <div className=\"task-column task-completed\">\n          { completed }\n        </div>\n      </div>\n    </div>\n  )\n}","export default function sortTasks(tasks) { \n  const toReturn = {\n    assigned: [],\n    inProgress: [],\n    completed: [],\n  };\n\n  for (const task of tasks) {\n    switch (task.status) {\n      case 1:\n        toReturn.inProgress.push(task);\n        break;\n      case 2:\n        toReturn.inProgress.push(task);\n        break;\n      case 3:\n        toReturn.completed.push(task);\n        break;  \n      default:\n        toReturn.assigned.push(task);\n        break;\n    }\n  }\n  return toReturn;\n};\n  ","export default function filterTasksByUser(tasks, id) {\n  return tasks.find(task => task.id === id);\n}","import React from 'react';\n\nexport default function MyTeamItem(props) {\n  const {\n    member,\n    selectTasksByUser,\n  } = props;\n\n  const { role, name, avatar, email, phone_number } = member;\n\n  const roles = {\n    1 : 'Project Manager',\n    2 : 'Employee'\n  }\n\n  return (\n    <div \n      className='my-team-item'\n      onClick={() => selectTasksByUser(member)}\n    >\n      <img src={avatar} alt= \"User Avatar\" className='my-team-item-avatar'></img>\n      <div className='my-team-item-right'>\n        <div className='my-team-item-name'>{role === 1 ? 'Show All' : name}</div>\n\n        {/* <div className='my-team-item-details'>{roles[role]}</div>\n        <div className='my-team-item-details'>{email}</div>\n        <div className='my-team-item-details'>{phone_number}</div> */}\n\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport MyTeamItem from './MyTeamItem';\nimport '../../styles/MyTeam.css';\n\nexport default function MyTeam(props) {\n  const {\n    selectTasksByUser,\n    teamUsers,\n  } = props;\n\n  const teamMembers = teamUsers.map((member) => {\n    return (\n    <MyTeamItem\n      key={member.id}\n      member={member}\n      selectTasksByUser={selectTasksByUser}\n    />\n    )\n  })\n\n  return (\n    <div className=\"team-list\">\n      {teamMembers}\n    </div>\n  )\n}","export default function filterTasksByUser(uid, tasks) {\n  return tasks.filter(task => task.employee_id === Number(uid));\n}","import React, { useState, useEffect } from 'react';\n\n\n// import ProjectProgress from './ProjectProgress';\nimport TaskProgress from './TaskProgress';\nimport MyTeam from './MyTeam';\n\nimport filterTasksByUser from '../../helpers/filterTasksByUser';\n\nimport '../../styles/Tasks.css';\n\nexport default function Tasks(props) {\n  const {\n    role,\n    tasks,\n    teamUsers,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    error,\n    setErrorNotification,\n    moveTask,\n    setTasks\n  } = props;\n\n  const [selectedTasks, setSelectedTasks] = useState(tasks);\n\n  useEffect(() => {\n    setSelectedTasks(tasks);\n  }, [tasks])\n\n  const selectTasksByUser = (user) => {\n    if (user.role === 1) {\n      setSelectedTasks(tasks);\n      return;\n    }\n    const userTasks = filterTasksByUser(user.id, tasks);\n    setSelectedTasks(userTasks);\n  }\n\n  return (\n    <div className='dashboard'>\n      <div className=\"task-dashboard-top\">\n        <TaskProgress \n          role={role} \n          tasks={selectedTasks} \n          teamUsers={teamUsers} \n          submissions={submissions}\n          deleteTaskItem={deleteTaskItem} \n          editTaskItem={editTaskItem}\n          submitTaskItem={submitTaskItem}\n          error={error}\n          setErrorNotification={setErrorNotification}\n          moveTask={moveTask}\n          setTasks={setTasks}\n        />\n      </div>\n      { role === 1 && \n      <div className=\"task-dashboard-bottom\">\n        <div className=\"team-list-container\" id=\"team-list-filter\">\n          <MyTeam \n            teamUsers={teamUsers} \n            selectTasksByUser={selectTasksByUser}\n          />\n        </div>\n      </div>}\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function ChatLogItem(props) {\n  const { userId, avatar, senderId, sender, message, time_locale } = props;\n\n  const chatItemClass = classNames(\"chat-item\", { \"own-message\": userId === senderId});\n\n  return (\n    <div className={chatItemClass}>\n      <img className=\"chat-avatar\" alt=\"Employee Avatar\" src={avatar}></img>\n      <div className=\"chat-item-right\">\n        <div className=\"chat-message-sender\">{sender}</div>\n        <div className=\"chat-message\">{message}</div>\n        <span className=\"chat-message-time\">{time_locale}</span>\n      </div>\n    </div>\n  )\n}","export default function getUserById(teamUsers, id) {\n  return teamUsers.find(user => user.id === id);\n}","import { React, useCallback, useState, useEffect, useRef } from 'react';\nimport { useObserveScrollPosition } from 'react-scroll-to-bottom';\nimport classNames from 'classnames';\n\nimport ChatLogItem from \"./ChatLogItem\";\nimport getUserById from '../../helpers/getUserById';\n\nexport default function ChatLog(props) {\n  const { userId, messages, chatInfo, getPrevMessages, teamUsers } = props;\n\n  const [visible, setVisible] = useState(false);\n  const [page, setPage] = useState(1);\n  const loader = useRef(null);\n  const container = useRef(null);\n  // here we handle what happens when user scrolls to Load More div\n  // in this case we just update page variable\n  const handleObserver = (entities) => {\n    const target = entities[0];\n    if (target.isIntersecting) {   \n      setPage((page) => page + 1)\n    }\n  }\n\n  useEffect(() => {\n    var options = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 1.0\n    };\n    // initialize IntersectionObserve and attaching to Load More div\n    const observer = new IntersectionObserver(handleObserver, options);\n    if (loader.current) {\n      observer.observe(loader.current)\n    }\n  }, []);\n\n  useEffect(() => {\n    getPrevMessages();\n  }, [page]);\n\n  useEffect(() => {\n    setVisible(true);\n    setTimeout(() => {\n      setVisible(false);\n    }, 2000);\n  }, [chatInfo]);\n\n  const chatBottomClass = classNames(\"chat-log-bottom\", {expanded: visible});\n\n  const messageComponents = messages.map((messageData, index) => {\n    const { sender, message, sender_id, time_iso, time_locale } = messageData;\n    return (\n      <ChatLogItem \n        userId={userId}\n        key={`${sender_id}: ${time_iso}`}\n        avatar={getUserById(teamUsers, sender_id).avatar}\n        sender={sender} \n        senderId={sender_id}\n        message={message}\n        time_locale={time_locale}\n      />\n    )\n  })\n\n  return (\n    <div className=\"chat-log\" ref={container}>\n      <div className=\"loading\" ref={loader}></div>\n      {messageComponents}\n      <div className={chatBottomClass}>\n        <span className=\"clat=info\">\n          {chatInfo}\n        </span>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\n\nexport default function MembersListItem(props) {\n  const { name, role, avatar, online } = props;\n  const imgClass = classNames('chat-avatar', 'members-list-avatar', { 'avatar-online': online })\n  const itemClass = classNames('members-list-item', { 'member-item-online': online })\n  return (\n    <div className={itemClass}>\n      <img src={avatar} alt= \"User Avatar\" className={imgClass}></img>\n      <div className='member-item-right'>\n        <div className='member-item-name'>{name}</div>\n        <div className='member-item-role'>{role}</div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport MembersListItem from \"./MembersListItem\";\n\nconst roles = [\"Project Manager\", \"Developer\"];\n\nexport default function MembersList(props) {\n  const { teamUsers, onlineUsers } = props;\n\n  const memberComponents = teamUsers.map(member => {\n    const {id, name, role, avatar} = member;\n    return (\n      <MembersListItem \n        key={id}\n        name={name} \n        role={roles[role-1]}\n        avatar={avatar}\n        online={onlineUsers.includes(id)}\n      />\n    );\n  })\n  return (\n    <div className=\"members-list\">\n      {memberComponents}\n    </div>\n  )\n}","import { React, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\nexport default function InputBox(props) {\n  const { sendMessage } = props;\n  const [ message, setMessage ] = useState('');\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if (message) {\n      sendMessage( message );\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-input-box\">\n      <form \n        autoComplete=\"off\"\n        onSubmit={e => submitForm(e)}\n      >\n        <TextareaAutosize \n          className=\"chat-input\"\n          name=\"msg\"\n          type=\"text\"\n          placeholder=\"Your message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n          onKeyPress={e => {\n            if(e.key === 'Enter')\n               submitForm(e);\n            }}\n        />\n        <button className=\"chat-send\" type=\"submit\"><i class=\"material-icons\">send</i></button>\n      </form>\n    </div>\n  );\n}","import { React } from 'react';\n\nimport ChatLog from \"./ChatLog\";\nimport MembersList from \"./MembersList\";\nimport InputBox from \"./InputBox\";\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport '../../styles/Chat.css';\n\nimport useChat from '../../hooks/useChat';\n\nexport default function Chat(props) {\n  const { socket, userInfo, teamUsers, messages, setMessages } = props\n\n  const { \n    //messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  } = useChat(socket, userInfo, messages, setMessages);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-left\">\n        <ScrollToBottom className=\"chat-log-container\">\n          <ChatLog \n            userId={userInfo.id}\n            messages={messages} \n            chatInfo={joinMessage} \n            getPrevMessages={getPrevMessages}\n            teamUsers={teamUsers}\n          />\n        </ScrollToBottom>\n        <InputBox sendMessage={sendMessage} />\n      </div>\n      <MembersList teamUsers={teamUsers} onlineUsers={onlineUsers} />\n    </div>\n  )\n};","import { useState, useEffect } from 'react';\n\nimport formatDateString from \"../utilities/format-date\";\n\nexport default function useChat(socket, userInfo, messages, setMessages) {\n  const { id, name, team_id } = userInfo;\n\n  //const [ messages, setMessages ] = useState([]);\n  const [ onlineUsers, setOnlineUsers ] = useState([]);\n  const [ joinMessage, setJoinMessage ] = useState(\"\");\n\n  const getLastMessageTime = (messages) => {\n    const lastMsg = messages[messages.length -1];\n    return lastMsg ? lastMsg.time_iso : 0;\n  }\n\n  useEffect(() => {\n    //socket = io();\n\n    socket.emit('joining msg', name, id, getLastMessageTime(messages));\n\n    socket.on('user joined', (users, username, messagesData) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" joined the chat\")\n      if (messagesData.length) {\n        setMessages(messagesData, true);\n      } \n    });\n\n    socket.on('user left', (users, username) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" left the chat\")\n    });\n  \n    socket.on('chat message', function(messageData) {\n      setMessages([messageData], true);\n    });\n\n    socket.on('get previous messages', messagesData => {\n      setMessages(messagesData, false);\n    });\n\n    socket.on('message saved', function(messageData) {\n      console.log('message saved: ', messageData);\n    });\n\n    return () => {\n      socket.off('user joined');\n      socket.off('user left');\n      socket.off('chat message');\n      socket.off('get previous messages');\n      socket.off('message saved');\n      socket.emit('leaving msg', name, id );\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getPrevMessages = () => {\n    if (messages[0]) {\n      socket.emit('get previous messages', messages[0].time_iso, 12);\n    }\n  }\n\n  const sendMessage = message => {\n    const now = new Date();\n    const messageData = {\n      message,\n      team_id,\n      sender_id: id,\n      sender: name,\n      time_iso: now.toISOString(),\n      time_locale: formatDateString(now),\n    }\n    socket.emit('chat message', messageData);\n  };\n\n  return { \n    messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  };\n}","export default function formatDateString(date) {\n  const dateString = date.toLocaleDateString('en-US', {\n    day:    'numeric',\n    month:  'short',\n    year:   'numeric'\n  });\n\n  const timeString = date.toLocaleTimeString(undefined, {\n    hour:   'numeric',\n    minute: '2-digit',\n});\n\n  return dateString + \" at \" + timeString;\n}","export function getEmployeeName (data, empID) {\n  let result = '';\n\n  for (const index of data) {\n    if (index.id === empID) {\n      result = index.name;\n    }\n  }\n  return result;\n}","import React, { useState } from 'react';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\nimport { Button, Modal } from 'react-bootstrap';\nimport Moment from 'react-moment';\n\nexport default function Feedback(props) {\n  const {\n    teamUsers,\n    selectedTask,\n    show,\n    setShow,\n    giveFeedback,\n    setUserNotification,\n    user\n  } = props; \n\n  const {\n    title,\n    description,\n    employee_id,\n    creation_date,\n    due_date,\n    is_late,\n  } = selectedTask;\n\n  const [feedback, setFeedback] = useState({\n    message: \"\",\n  });\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  const handleSubmit = (accepted) => {\n    if (feedback.message === \"\") {\n      setUserNotification(prev => ({...prev, title: \"Error\", message: \"Please enter a feedback\", type: \"error\", user: user.id}))\n      return;\n    }\n    giveFeedback(feedback.message, selectedTask, accepted);    \n    setFeedback(prev => ({...prev, message: \"\"}));\n    setShow(false);\n  }\n\n  return (\n\n    <div className=\"feedback-container\">\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {title}\n          </Modal.Title>\n        </Modal.Header>\n\n        <form class=\"form-group\" onSubmit={event => event.preventDefault()}>\n          <Modal.Body>\n            <p>{description}</p>\n            <p>Assigned to: {getEmployeeName(teamUsers, employee_id)}</p>\n            <p>On: <Moment format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment>\n            </p>\n            <p>Due on: <Moment format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n              { is_late && (<span className=\"badge badge-danger\">LATE</span>) }\n            </p>\n            \n            <div>\n              <label for=\"feedback\">Feedback:</label>\n              <textarea\n                name=\"feedback\"\n                className=\"form-control\"\n                value={feedback.message}\n                onChange={event => setFeedback(prev => ({...prev, message: event.target.value}))}\n              />\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"danger\"\n              onClick={(event) => handleSubmit(false)}\n            >\n              Reject\n            </Button>\n            <Button \n              variant=\"success\"\n              onClick={(event) => handleSubmit(true)}\n            >\n              Accept\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import React from 'react';\n\nimport Moment from 'react-moment';\n\nexport default function SubmissionItem(props) {\n\n  const { title, name, description, is_late, is_viewed, taskData, setSelectedTask, setShow } = props;\n\n  const handleOpen = () => {\n    setSelectedTask(taskData);\n    setShow(true);\n  }\n\n  return (\n    <div className=\"submission-card-item\" onClick={event => handleOpen()}>\n      <h5>{title}</h5>\n      <p className=\"submission-card-name'\">{name}</p>\n      <p className=\"submission-card-description\">{description}</p>\n      { is_late && <span className=\"badge badge-danger submission-badge\">LATE</span> }\n      <div className=\"submission-card-item-dates\">\n        <div className=\"card-date\">\n          <label for=\"creation_date\">On: </label>\n          <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{taskData.creation_date}</Moment> \n        </div>\n        <div className=\"card-date\">\n          <label for=\"due_date\">Due:</label>\n          <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{taskData.due_date}</Moment>\n        </div>\n      </div>\n      <div className=\"submission-card-item-badge-container\">\n        <div className=\"submission-card-item-badge\">\n          { taskData.status === 0 && <i class=\"fas fa-people-arrows\"></i> }\n          { taskData.status === 1 && <i class=\"fas fa-spinner\"></i> }\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport SubmissionItem from './SubmissionItem';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function SubmisionList(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    setSelectedTask, \n    setShow \n  } = props;\n\n  const listedTeamTasks = teamTasks.map((task) => {\n    return (\n      task.status === 2 &&\n      <SubmissionItem\n        key={task.id}\n        title={task.title}\n        description={task.description}\n        name={getEmployeeName(teamUsers, task.employee_id)}\n        is_late={task.is_late}\n        is_viewed={task.is_viewed}\n        taskData={task}\n        setSelectedTask={setSelectedTask}\n        setShow={setShow}\n      />\n    )\n  })\n\n  return (\n    <div className=\"submissions-list\">\n      {listedTeamTasks}\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Feedback from './Feedback';\nimport SubmissionList from './SubmissionList';\n\nimport '../../styles/Submissions.css';\n\nexport default function Submissions(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    giveFeedback,\n    setUserNotification,\n    user\n  } = props;\n  \n  const [selectedTask, setSelectedTask] = useState({});\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"submissions-container\">\n      <h1>Submitted Tasks</h1>\n      <div className=\"submissions\">\n        <SubmissionList\n          teamUsers={teamUsers}\n          teamTasks={teamTasks}\n          setSelectedTask={setSelectedTask}\n          setShow={setShow}\n        />\n      </div>\n      <div>\n        <Feedback\n          teamUsers={teamUsers}\n          selectedTask={selectedTask}\n          show={show}\n          setShow={setShow}\n          giveFeedback={giveFeedback}\n          setUserNotification={setUserNotification}\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function SidebarItem(props) {\n  const menuClass = classNames(\"sidebar-list__item\", {\n    'sidebar-list__item--selected': props.selected\n  })\n\n  return (\n    <li\n      className={menuClass}\n      onClick={() => props.setMenu(props.name)}\n    >\n      <h3>{props.name}</h3>\n    </li>\n  )\n}","import React, { useState } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport { Modal, Button } from 'react-bootstrap';\n\nimport getUserNameById from '../../helpers/getUserNameById';\n\nexport default function NewTaskItem(props) {\n  \n  // to force a bug for error messages\n  const dateNow = new Date();\n  dateNow.setDate(dateNow.getDate() + 7);\n  dateNow.setHours(17); \n  dateNow.setMinutes(0);\n\n  const {\n    team,\n    teamUsers,\n    createTaskItem, \n    error,\n    setErrorNotification\n  } = props;\n\n  const [taskItem, setTaskItem] = useState({\n    projecttask_id: team,\n    title: \"\",\n    description: \"\",\n    employee_id: \"\",\n    due_date: dateNow,\n  });\n\n  const [show, setShow] = useState(false);\n\n  const teamMembersList = teamUsers.filter(user => user.role !== 1);\n\n  const handleClose = () => setShow(false);\n\n  function reset() {\n    setTaskItem(prev => ({\n      ...prev,\n      title: \"\",\n      description: \"\",\n      employee_id: \"\",\n    }))\n  }\n\n  function validate() {\n    const { title, description, employee_id, due_date } = taskItem;\n\n    if (title === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Title must be valid\"}))\n      document.getElementById(\"new-task-title\").focus();\n      return;\n    }\n    if (description === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Description must be valid\"}))\n      document.getElementById(\"new-task-description\").focus();\n      return;\n    }\n    if (employee_id === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Employee assigned must be valid\"}))\n      document.getElementById(\"new-task-assign\").focus();\n      return;\n    }\n    if (due_date < new Date()) {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Due date cannot be in the past\"}))\n      document.getElementById(\"new-task-date\").focus();\n      return;\n    }\n    createTaskItem(taskItem)\n    reset();\n    setShow(false);\n  }\n\n  return (\n    <div className=\"create-task\">\n      <span></span>\n      <span></span>\n      <p onClick={() => setShow(true)}>Create New Task</p>\n      {/* <span className=\"new-task-btn\" onClick={() => setShow(true)}><i class=\"fas fa-plus new-task-btn\"></i> New Task</span> */}\n\n      <form \n        className=\"form-group\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <Modal show={show} onHide={handleClose} onEntered={() => document.getElementById(\"new-task-title\").focus()} >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <h3>New Task</h3>\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <label for=\"title\">Title: </label>\n            <input\n              id=\"new-task-title\"\n              name=\"title\"\n              className=\"form-control\"\n              value={taskItem.title}\n              onChange={(event) => setTaskItem(prev => ({...prev, title: event.target.value}))}\n            />\n\n            <label for=\"description\">Description: </label>\n            <textarea\n              id=\"new-task-description\"\n              name=\"description\"\n              className=\"form-control\"\n              value={taskItem.description}\n              onChange={(event) => setTaskItem(prev => ({...prev, description: event.target.value}))}\n            />\n\n            <label for=\"assignTo\">Assign to: </label>\n            <select class=\"form-control\"\n              id=\"new-task-assign\"\n              onChange={event => setTaskItem(prevTaskItem => ({...prevTaskItem, employee_id: Number(event.target.value)}))}\n            >\n              <option selected value={\"\"}></option>\n              { teamMembersList.map(member => {\n                return (\n                  <option value={member.id}>{member.name}</option>\n                )\n              })  }\n            </select>\n            <br />\n            <label for =\"due-date\">Due on: </label>\n            <DatePicker \n              id=\"new-task-date\"\n              className=\"form-control\" \n              selected={new Date(taskItem.due_date)} \n              showTimeInput\n              onChange={date => setTaskItem(prevTaskItem => ({...prevTaskItem, due_date: date}))}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"primary\"\n              onClick={event => (validate())}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </form>\n    </div>\n\n  )\n}","import '../../styles/Sidebar.css';\n\nimport React from 'react';\nimport { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent, Menu, MenuItem } from 'react-pro-sidebar';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport SidebarItem from './SidebarItem';\nimport NewTaskItem from '../Tasks/NewTaskItem';\n\nexport default function Sidebar(props) {\n  const {\n    selectedMenu,\n    userInfo,\n    teamUsers,\n    setMenu,\n    createTaskItem,\n    error,\n    setErrorNotification\n  } = props\n\n  const menuItems = userInfo.role === 1 ? \n    ['Dashboard', 'Tasks', 'Chat','Submissions'] : \n    ['Dashboard', 'Tasks', 'Chat'];\n\n  return (\n    <ul>\n    { menuItems.map((item, index) => {\n      return (\n        <SidebarItem\n          key={index}\n          name={item}\n          selected={selectedMenu === item}\n          setMenu={setMenu}\n        />)\n      })}\n      { userInfo.role === 1 && (\n        <div key={4}>\n          <NewTaskItem\n            team={userInfo.team_id}\n            teamUsers={teamUsers} \n            createTaskItem={createTaskItem} \n            error={error}\n            setErrorNotification={setErrorNotification}\n          />\n        </div>\n      )}\n    </ul>\n  )\n}","import React from 'react';\n\nimport Moment from 'react-moment';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function DeadlineListItem(props) {\n\n  const { title, description, due_date, creation_date, assignedTo, userInfo, teamUsers, is_late, status } = props;\n\n  return (\n    <div className={`deadline-card-${status === 0 ? 'assigned' : 'inprogress'}`}>\n\n      <h5>{props.title}</h5>\n      { userInfo.role === 1 && <p>{getEmployeeName(teamUsers, assignedTo)}</p> }\n      <div className=\"card-date\">\n        <label for=\"creation_date\">On: </label>\n        <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n      </div>\n      <div className=\"card-date\">\n        <label for=\"due_date\">Due:</label>\n        <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n      </div>\n      <div className={`deadline-card-badge-container-${status === 0 ? 'assigned' : 'inprogress'}`}>\n        \n        <div className=\"deadline-card-badge\">\n          { status === 0 && <i class=\"fas fa-people-arrows\"></i> }\n          { status === 1 && <i class=\"fas fa-spinner\"></i> }\n        </div>\n      </div>\n      { is_late && <span className=\"badge badge-danger\">LATE</span> }\n    </div>\n  )\n  \n}","import React from 'react';\n\nimport DeadlineListItem from './DeadlineListItem';\n\nexport default function DeadlineList(props) {\n\n  const { deadlines, userInfo, teamUsers } = props;\n\n  const filteredUserDeadlinesByUser = \n    deadlines\n    .filter(task => task.employee_id === userInfo.id)\n    .map((task) => {\n      return (\n        <DeadlineListItem\n          key={task.id}\n          title={task.title}\n          description={task.description}\n          due_date={task.due_date}\n          creation_date={task.creation_date}\n          userInfo={userInfo}\n          assignedTo={task.employee_id}\n          is_late={task.is_late}\n          teamUsers={teamUsers}\n          status={task.status}\n        />\n      )\n    })\n\n  const filteredUserDeadlines = deadlines.map(task => {\n    return (\n      <DeadlineListItem\n        key={task.id}\n        title={task.title}\n        description={task.description}\n        due_date={task.due_date}\n        creation_date={task.creation_date}\n        userInfo={userInfo}\n        assignedTo={task.employee_id}\n        is_late={task.is_late}\n        teamUsers={teamUsers}\n        status={task.status}\n      />\n    )\n  })\n\n  return (\n    <ul className=\"deadline-ul\">\n      { userInfo.role === 1 ? filteredUserDeadlines : filteredUserDeadlinesByUser }\n    </ul>\n  )\n}","export default function filterDeadlineTasks(tasks) {\n  const dateNow = new Date().getTime();\n  const convertDate = (date) => new Date(date).getTime();\n\n  return tasks.filter(task => convertDate(task.due_date) < dateNow && (task.status === 0 || task.status === 1));\n}\n","import React, { useState } from 'react';\n\nimport DeadlineList from './DeadlineList';\n\nimport filterDeadlineTasks from '../../helpers/filterDeadlineTasks';\n\nconst roles = {\n  1: \"Project Manager\",\n  2: \"Employee\"\n}\n\nexport default function UserInfo(props) {\n  const { userInfo, tasks, teamUsers, transparent, selectedMenu } = props;\n  const filteredTasks = filterDeadlineTasks(tasks);\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const toggleFilter = (state) => {\n    document.getElementById(\"team-list-filter\").classList.toggle(\"change\");\n    \n    return state ? setOpenFilter(false) : setOpenFilter(true);\n  }\n\n  return (\n    <>\n      <div className={`user-info-transparent-${transparent}${openFilter && selectedMenu === \"Tasks\" ? ' change' : ''}`}  id=\"user-panel-wings\">\n        { userInfo && ( \n          <>\n            { userInfo.role === 1 && transparent === true && selectedMenu === \"Tasks\" && (\n              <span \n                className=\"user-filter-btn\"\n                onClick={event => toggleFilter(openFilter)}\n              >\n                <i class=\"fas fa-filter fa-2x\"></i>\n              </span>\n            )}\n            <img alt={userInfo.name} src={userInfo.avatar} className=\"user-avatar\"></img>\n            <h5>Welcome, {userInfo.name}</h5>\n            <h6>{roles[userInfo.role]}</h6>\n            <p>Past Due</p>\n            <div className=\"deadlines\">\n              <DeadlineList deadlines={filteredTasks} userInfo={userInfo} teamUsers={teamUsers} />\n            </div>\n            <div className=\"socials\">\n              <span><a href=\"https://github.com/clarchiu\" target=\"_blank\"><i class=\"fab fa-github\"></i><p>Clarence</p></a></span>\n              <span><a href=\"https://github.com/Kevinli296\" target=\"_blank\"><i class=\"fab fa-github\"></i><p>Kevin</p></a></span>\n              <span><a href=\"https://github.com/shaun-ws-yap\" target=\"_blank\"><i class=\"fab fa-github\"></i><p>Shaun</p></a></span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport SlidingPanel from 'react-sliding-side-panel';\nimport 'react-sliding-side-panel/lib/index.css';\n\nimport UserInfo from './UserInfo';\nimport useSidePanel from '../../hooks/useSidePanel';\n\nimport '../../styles/UserInfo.css';\n\nexport default function UserPanel(props) {\n  const { userInfo, tasks, teamUsers, selectedMenu } = props;\n  const [openPanel, setOpenPanel] = useState(false);\n\n  const handleButton = (state) => {\n    document.getElementById(\"user-hamburger\").classList.toggle(\"change\");\n    return state ? setOpenPanel(false) : setOpenPanel(true);\n  }\n  \n  return (\n    <>\n      <div>\n        <div className=\"open-user-panel\" id=\"user-hamburger\" onClick={event => handleButton(openPanel)}>\n          <div className=\"bar1\">\n          </div>\n          <div className=\"bar2\">\n          </div>\n          <div className=\"bar3\">\n          </div>\n        </div>\n\n        <div className=\"user-panel\">\n          <UserInfo\n            userInfo={userInfo} \n            tasks={tasks} \n            teamUsers={teamUsers}\n            transparent={true}\n            selectedMenu={selectedMenu}\n          />\n        </div>\n        <div className=\"hidden-user-panel\">\n          <SlidingPanel\n            type={'right'}\n            isOpen={openPanel}\n            size={30}\n          >\n            <UserInfo\n              userInfo={userInfo} \n              tasks={tasks} \n              teamUsers={teamUsers}\n              transparent={false}\n              selectedMenu={selectedMenu}\n            /> \n          </SlidingPanel>\n        </div>\n      </div>\n    </>\n  )\n} ","import React, { useState } from 'react';\n\nimport '../../styles/Login.css';\n\nexport default function Login(props) {\n  const { setLogin } = props;\n  const [loginId, setLoginId] = useState(0);\n\n  function handleLogin() {\n    setLogin(loginId);\n  }\n\n  return (\n    <div className=\"login-container\">\n        <ul className=\"box-area\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <div className=\"login\">\n            <h1>Enter your user ID </h1>\n            <input\n              onChange={event => setLoginId(event.target.value)}\n            />\n            <br />\n            <span className=\"login-button\" onClick={handleLogin}> \n              Submit\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n            </span>\n          </div>\n        </ul>\n    </div>\n  )\n}","import '../styles/App.css';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-notifications/lib/notifications.css';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { useState, useEffect } from 'react';\nimport { Route, BrowserRouter as Router, Switch, withRouter } from 'react-router-dom';\nimport { NotificationManager, NotificationContainer } from 'react-notifications';\n\nimport Dashboard from './Dashboard';\nimport Tasks from './Tasks';\nimport Chat from './Chat';\nimport Submissions from './Submissions';\nimport Sidebar from './Sidebar';\nimport UserPanel from './UserPanel';\nimport Login from './Login';\nimport SlidingPanel from 'react-sliding-side-panel';\n\nimport useApplicationData from '../hooks/useApplicationData';\nimport useNotifications from '../hooks/useNotifications';\nimport useSocket from '../hooks/useSocket';\nimport useTasks from '../hooks/useTasks';\n\n\nconst DASHBOARD = \"Dashboard\";\nconst TASKS = \"Tasks\";\nconst CHAT = \"Chat\";\nconst SUBMISSIONS = \"Submissions\"\n\nfunction App() {\n  const [selectedMenu, setMenu] = useState(DASHBOARD);\n  const [loginToken, setLoginToken] = useState(0);\n  const [errorNotification, setErrorNotification] = useState({\n    title: \"\",\n    message: \"\",\n  });\n  \n  const { socket } = useSocket(loginToken);\n\n  const { \n    state,\n    logout,\n    setTasks,  \n    setSubmissions,\n    setMessages,\n  } = useApplicationData(socket, loginToken, setErrorNotification);\n  \n  const {\n    userTasks,\n    userInfo,\n    role,\n    teamTasks,\n    teamUsers,\n    submissions,\n    messages,\n  } = state;\n\n  const { \n    setUserNotification,\n    setManagerNotification\n  } = useNotifications(userInfo, setMenu, NotificationManager);\n\n  const {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  } = useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo);\n\n  useEffect(() => {\n    if (errorNotification.message !== \"\") {\n      NotificationManager.error(errorNotification.title, errorNotification.message);\n      setErrorNotification(prev => ({...prev, title: \"\", message: \"\"}))\n    }\n  }, [errorNotification]);\n\n\n  const handleLogout = () => {\n    logout();\n    setManagerNotification({message: \"\", title: \"\", type: \"\", user: undefined})\n    setUserNotification({message: \"\", user: undefined, title: \"\", type: \"\"})\n    setLoginToken(0);\n    setMenu('');\n  }\n\n  if ( loginToken === 0 ) {\n    return (\n      <Login setLogin={setLoginToken}/> \n    )\n  }\n\n  return (\n    <div className=\"app-container\">\n      <NotificationContainer />\n      <section className=\"sidebar\">\n        <img \n          alt=\"Scrum-ptious Logo\"\n          className=\"sidebar-centered\"\n          src=\"https://www.freelogodesign.org/file/app/client/thumb/fb19eb8b-21e7-4a5b-9695-a099867ef5e5_200x200.png?1611814732064\"\n        />\n        <nav className=\"sidebar__menu\">\n          <Sidebar\n            selectedMenu={selectedMenu}\n            userInfo={userInfo}\n            teamUsers={teamUsers}\n            setMenu={setMenu}\n            createTaskItem={createTaskItem}\n            errorNotification={errorNotification}\n            setErrorNotification={setErrorNotification}\n          />\n        </nav>\n        <span \n          className=\"logout\"\n          onClick={() => handleLogout()}\n        >\n          <p>Log out</p>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </span>\n      </section>\n        <section className=\"dashboard-main\">\n          { selectedMenu === DASHBOARD && \n            <Dashboard\n              tasks={userTasks} \n              role={role} \n              teamTasks={teamTasks}\n              teamUsers={teamUsers}\n              userInfo={userInfo}\n            /> }\n          { selectedMenu === TASKS && \n            <Tasks \n              socket={socket} \n              role={role} \n              tasks={role === 1 ? teamTasks : userTasks} \n              teamUsers={teamUsers} \n              submissions={submissions}\n              deleteTaskItem={deleteTaskItem} \n              editTaskItem={editTaskItem}\n              submitTaskItem={submitTaskItem}\n              setErrorNotification={setErrorNotification}\n              moveTask={moveTask}\n              setTasks={setTasks}\n            />}\n          { selectedMenu === CHAT && \n            <Chat \n              socket={socket} \n              userInfo={userInfo} \n              teamUsers={teamUsers}\n              messages={messages}\n              setMessages={setMessages}\n            />}\n          { selectedMenu === SUBMISSIONS &&\n            <Submissions\n              teamUsers={teamUsers}\n              teamTasks={teamTasks}\n              giveFeedback={giveFeedback}\n              setUserNotification={setUserNotification}\n              user={userInfo}\n            />}\n        </section>\n        <section className=\"user__info\">\n          <UserPanel \n            userInfo={userInfo} \n            tasks={teamTasks} \n            teamUsers={teamUsers}\n            selectedMenu={selectedMenu}\n          />\n        </section>\n    </div>\n  );\n}\n\nexport default App\n","import { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nexport default function useSocket(loginToken) {\n  const [socket, setSocket] = useState({});\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n    console.log('connect');\n    const conn = io();\n    setSocket(conn);\n\n    return () => {\n      console.log('close');\n      conn.close();\n    }\n  }, [loginToken])\n\n  return { socket };\n};","import { useState, useEffect } from 'react';\nimport filterTasksByUser from '../helpers/filterTasksByUser';\n// import { Prev } from 'react-bootstrap/esm/PageItem';\n\n\nexport default function useApplicationData(socket, loginToken, setError) {\n  const [state, setState] = useState({\n    userInfo: {},\n    role: 0,\n    userTasks: [],\n    teamUsers: [],\n    teamTasks: [],\n    submissions: [],\n    messages: [],\n  });\n  \n  const logout = () => setState({\n    userInfo: {},\n    role: 0,\n    userTasks: [],\n    teamUsers: [],\n    teamTasks: [],\n    submissions: [],\n    messages: [],\n  });\n  \n  const setTasks = teamTasks => {\n    const userTasks = filterTasksByUser(loginToken, teamTasks);\n    setState(prev => ({...prev, teamTasks, userTasks}));\n  }\n  const setSubmissions = submissions => setState(prev => {\n    return {...prev, submissions }\n  })\n\n  const setMessages = (messages, shouldAppend) => setState(prev => {\n    if (shouldAppend) {\n      return {...prev, messages: [...prev.messages, ...messages]};\n    }\n    return {...prev, messages: [...messages, ...prev.messages]};\n  })\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    if (!socket) {\n      return;\n    }\n\n    console.log('log in');\n    socket.emit('user logged in', loginToken);\n\n    socket.on('login data', loginData => {\n      const { userTasks, userInfo, teamTasks, teamUsers, submissions } = loginData;\n      setState(prev => ({ \n        ...prev, \n        userTasks, \n        userInfo, \n        teamTasks, \n        teamUsers, \n        submissions, \n        role: userInfo.role, \n      }));\n    });\n\n    socket.on('error', (error, data) => {\n      setError(prev => ({...prev, title: data.title, message: error}));\n    });\n\n    return () => {\n      if (!loginToken) {\n        socket.off('login data'); \n        socket.off('error');\n      }\n    }\n  }, [socket]);\n\n\n  return { \n    state, \n    logout,\n    setTasks,  \n    setSubmissions,\n    setMessages,\n  }\n}","import { useState, useEffect } from 'react';\n\nexport default function useNotifications(userInfo, setMenu, NotificationManager) {\n  const [userNotification, setUserNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  const [managerNotification, setManagerNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  useEffect(() => {\n    if (userNotification.message !== \"\" && userNotification.user === userInfo.id) {\n      switch(userNotification.type) {\n        case 'info':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.info(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          });\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'success':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.success(userNotification.message, userNotification.title);\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'warning':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.warning(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          })\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'error':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.error(userNotification.message, userNotification.title);\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n      }\n      setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n      setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n    if (managerNotification.message !== \"\" && managerNotification.user === userInfo.id) {\n      console.log(managerNotification.type)\n      switch(managerNotification.type) {\n        case 'info':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.info(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'success':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.success(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'warning':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.warning(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'error':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.error(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n      }\n      setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n      setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n  }, [userNotification, managerNotification])\n\n  return {\n    userNotification,\n    managerNotification,\n    setUserNotification,\n    setManagerNotification\n  }\n}","import { useState, useEffect } from 'react';\nimport findSubmissionByTask from '../helpers/findSubmissionByTask';\n\nexport default function useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo) {\n  const TASK_STATUS = {\n    ASSIGNED: 0,\n    IN_PROGRESS: 1,\n    IN_REVIEW: 2,\n    COMPLETE: 3,\n  }\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    if (!socket) {\n      return;\n    }\n\n    socket.on('tasks update', (teamTasks, userToAlert) => {\n      setTasks(teamTasks);\n      setUserNotification(prev => ({...prev, message: \"Your tasks have updated\", user: userToAlert, title: \"Click to view\", type: \"warning\"}))\n    });\n    \n    socket.on('tasks action saved', (op, task) => {\n      switch(op) {\n        case 'CREATE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Created\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'EDIT':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Updated\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'DELETE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Deleted\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'FEEDBACK':\n          setManagerNotification(prev => ({...prev, message: \"Submission Updated\", title: \"Feedback Sent\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'MOVE':\n          setUserNotification(prev => ({...prev, message: task.title, user: Number(loginToken), title: \"Task Moved\", type: \"success\"}))\n          break;\n      }\n    });\n\n    socket.on('submt/feedback', (result, userToAlert) => {\n      setUserNotification(prev => ({...prev, message: \"You have task updates\", user: userToAlert, title: \"Submission Updated\", type: \"info\"}))\n      setTasks(result.teamTasks);\n      setSubmissions(result.submissions);\n    });\n      \n    return () => {\n      socket.off('tasks update');\n      socket.off('tasks action saved');\n      socket.off('submit/feedback');\n    }\n  }, [socket]);\n\n  const CREATE = 'CREATE';\n  const EDIT   = 'EDIT';\n  const DELETE = 'DELETE';\n\n  const moveTask = (taskItem, STATUS) => {\n    socket.emit('move task', taskItem, STATUS);\n  }\n\n  const createTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, CREATE);\n  };\n\n  const editTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, EDIT);\n  };\n\n  const deleteTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, DELETE);\n  };\n\n  const submitTaskItem = taskItem => {\n    const toSubmit = {...taskItem, status: TASK_STATUS.IN_REVIEW}\n    const submitTaskData = {\n      submission: {\n        feedback_string: '', \n        submission_date: new Date().toISOString(), \n        task_id: taskItem.id\n      },\n      taskItem: toSubmit\n    }\n    socket.emit('employee submit', submitTaskData, 1);\n  };\n\n  const giveFeedback = (message, task, accepted) => {\n    const ACCEPTED = 'accepted';\n    const REJECTED = 'rejected';\n\n    const submission = findSubmissionByTask(submissions, task.id);\n    const feedback = {\n      ...submission,\n      feedback_string: message,\n      status: accepted ? ACCEPTED : REJECTED\n    }\n    const taskItem = {\n      ...task,\n      status: accepted ? 3 : 1\n    }\n\n    socket.emit('feedback', {feedback, taskItem}, taskItem.employee_id);\n  }\n\n  return {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  };\n}\n","export default function findSubmissionByTask(submissions, tid) {\n  const PENDING  = 'pending';\n  return submissions.find(submission => {\n    return submission.task_id === tid \n      && submission.status === PENDING;\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}