{"version":3,"sources":["helpers/taskStatus.js","components/Dashboard/ProjectProgress.js","components/Dashboard/IndependentProgress.js","components/Dashboard/EmployeeProgressItem.js","components/Dashboard/EmployeeProgress.js","components/Dashboard/index.js","helpers/getTaskStatus.js","components/Tasks/ManagerModal.js","components/Tasks/FeedbackList.js","helpers/getUserNameById.js","components/Tasks/EmployeeModal.js","components/Tasks/TaskItem.js","components/Tasks/TaskProgress.js","helpers/sortTasks.js","helpers/findTaskItemById.js","components/Tasks/MyTeamItem.js","components/Tasks/MyTeam.js","components/Tasks/TaskResource.js","helpers/filterTasksByUser.js","components/Tasks/index.js","components/Chat/ChatLogItem.js","components/Chat/ChatLog.js","components/Chat/MembersListItem.js","components/Chat/MembersList.js","components/Chat/InputBox.js","components/Chat/index.js","hooks/useChat.js","utilities/format-date.js","helpers/getEmployeeName.js","components/Submissions/Feedback.js","components/Submissions/SubmissionItem.js","components/Submissions/SubmissionList.js","components/Submissions/index.js","components/Sidebar/SidebarItem.js","components/Tasks/NewTaskItem.js","components/Sidebar/index.js","components/Dashboard/DeadlineListItem.js","components/Dashboard/DeadlineList.js","helpers/filterDeadlineTasks.js","components/Dashboard/UserInfo.js","components/Login/index.js","components/App.js","hooks/useSocket.js","hooks/useApplicationData.js","hooks/useNotifications.js","hooks/useTasks.js","helpers/findSubmissionByTask.js","index.js"],"names":["taskStatus","status","data","counter","lateTaskStatus","is_late","ProjectProgress","props","assignedTasks","teamTasks","inProgressTasks","inReviewTasks","completeTasks","lateTasks","className","labels","datasets","label","backgroundColor","height","width","options","maintainAspectRatio","title","display","text","fontSize","legend","position","IndependentProgress","independentTasks","scales","yAxes","ticks","beginAtZero","EmployeeProgress","assigned","inProgress","inReview","late","complete","name","useState","setIndex","userData","teamUsers","filter","user","role","map","taskData","team","empID","result","index","projecttask_id","employee_id","teamTaskStatus","team_id","id","defaultIndex","onSelect","Dashboard","tasks","getTaskStatus","type","ManagerModal","taskItem","show","handleClose","editTaskItem","deleteTaskItem","error","setError","description","due_date","editMode","setEditMode","newTaskData","setNewTaskData","taskInfo","assignNewUserList","getUserNameById","find","validate","NotificationManager","warning","document","getElementById","focus","Date","Modal","onHide","Header","closeButton","Title","Button","onClick","variant","Body","for","local","format","autofocus","value","onChange","event","prev","target","selected","item","locale","showTimeInput","date","tmp","toISOString","onDateChange","dateFormat","Footer","console","log","confirm","FeedbackList","feedbackItems","tid","feedbacks","reverse","feedback","task_id","filterFeedbackByTask","taskId","feedback_string","submission_date","EmployeeModal","submissions","submitTaskItem","TaskItem","creation_date","setShow","taskClass","classNames","onSubmit","preventDefault","TaskProgress","moveTask","setTasks","sortedTasks","setSortedTasks","trashVisible","setTrashVisible","useEffect","updated","toReturn","completed","task","push","sortTasks","sortedComponents","key","draggable","draggableId","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","onDragEnd","res","destination","source","droppableId","findTaskItemById","Number","onBeforeCapture","droppableProps","placeholder","MyTeamItem","member","selectTasksByUser","email","phone_number","1","2","MyTeam","teamMembers","TaskResource","filterTasksByUser","uid","Tasks","selectedTasks","setSelectedTasks","userTasks","ChatLogItem","avatar","sender","message","time_locale","alt","src","ChatLog","messages","chatInfo","getPrevMessages","visible","setVisible","page","setPage","loader","useRef","container","handleObserver","entities","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","setTimeout","messageComponents","messageData","sender_id","time_iso","MembersListItem","online","imgClass","itemClass","roles","MembersList","onlineUsers","memberComponents","includes","InputBox","sendMessage","setMessage","autoComplete","e","submitForm","Chat","socket","userInfo","setMessages","setOnlineUsers","joinMessage","setJoinMessage","axios","get","then","emit","on","users","username","messagesData","off","now","toLocaleDateString","day","month","year","toLocaleTimeString","undefined","hour","minute","useChat","getEmployeeName","Feedback","selectedTask","giveFeedback","setFeedback","handleSubmit","accepted","class","SubmissionItem","is_viewed","setSelectedTask","SubmisionList","listedTeamTasks","Submissions","SidebarItem","menuClass","setMenu","NewTaskItem","dateNow","setDate","getDate","setHours","setMinutes","createTaskItem","setTaskItem","teamMembersList","onEntered","prevTaskItem","Sidebar","selectedMenu","menuItems","DeadlineListItem","assignedTo","DeadlineList","deadlines","filteredUserDeadlinesByUser","filteredUserDeadlines","filterDeadlineTasks","getTime","UserInfo","filteredTasks","Login","setLogin","DASHBOARD","App","loginToken","setLoginToken","setSocket","conn","io","close","useSocket","errorNotification","setErrorNotification","state","setState","loginData","setSubmissions","useApplicationData","userNotification","setUserNotification","managerNotification","setManagerNotification","info","success","useNotifications","TASK_STATUS","userToAlert","op","STATUS","toSubmit","submitTaskData","submission","findSubmissionByTask","useTasks","ReactDOM","render"],"mappings":"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","file":"static/js/main.75f07f45.chunk.js","sourcesContent":["export function taskStatus (status, data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.status === status) {\n      counter += 1\n    }\n  }\n\n  return counter;\n}\n\nexport function lateTaskStatus (data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.is_late === true) {\n      counter += 1;\n    }\n  }\n\n  return counter;\n}\n\nexport function teamTaskStatus (data, team, empID) {\n  let result = {\n    assigned: 0,\n    inProgress: 0,\n    inReview: 0,\n    late: 0,\n    complete: 0\n  };\n\n  for (const index of data) {\n    if (index.projecttask_id === team && index.employee_id === empID) {\n      if (index.status === 0) {\n        result.assigned += 1\n      } else if (index.status === 1) {\n        result.inProgress += 1;\n      } else if (index.status === 2) {\n        result.inReview += 1;\n      } else if (index.status === 3) {\n        result.complete += 1;\n      }\n      if (index.is_late === true) {\n        result.late += 1;\n      }\n    }\n  }\n\n  return result;\n}\n\n\nexport function changeTaskStatus (data) {\n\n  data.status += 1;\n  return data;\n\n}","import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\n// import ProjectProgressListItem from './ProjectProgressListItem';\n\nexport default function ProjectProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.teamTasks);\n  const inProgressTasks = taskStatus(1, props.teamTasks);\n  const inReviewTasks = taskStatus(2, props.teamTasks);\n  const completeTasks = taskStatus(3, props.teamTasks);\n  const lateTasks = lateTaskStatus(props.teamTasks);\n\n\n  return (\n    <div className=\"project-progress\">\n      <Doughnut\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(28, 20, 255, 0.8)',\n                'rgba(255, 247, 20, 0.8)',\n                'rgba(232, 86, 2, 0.8)',\n                'rgba(255, 20, 20, 0.8)',\n                'rgba(33, 232, 2, 0.8)',\n              ]\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Project Progress',\n            fontSize: 25,\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  )\n}","import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\nexport default function IndependentProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.independentTasks);\n  const inProgressTasks = taskStatus(1, props.independentTasks);\n  const inReviewTasks = taskStatus(2, props.independentTasks);\n  const completeTasks = taskStatus(3, props.independentTasks);\n  const lateTasks = lateTaskStatus(props.independentTasks);\n\n\n  return (\n    <div className=\"independent-progress\">\n      <Bar\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(28, 20, 255, 0.8)',\n                'rgba(255, 247, 20, 0.8)',\n                'rgba(232, 86, 2, 0.8)',\n                'rgba(255, 20, 20, 0.8)',\n                'rgba(33, 232, 2, 0.8)',\n              ]\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Your Progress',\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }}\n      />\n    </div>\n  )\n}","import React from 'react';\n \nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { TabPanel } from 'react-tabs';\n \nexport default function EmployeeProgress(props) {\n \n\n  return (\n    <div className=\"employee-progress\">\n      <Bar\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [props.assigned, props.inProgress, props.inReview, props.late, props.complete],\n              backgroundColor: [\n                'rgba(28, 20, 255, 0.8)',\n                'rgba(255, 247, 20, 0.8)',\n                'rgba(232, 86, 2, 0.8)',\n                'rgba(255, 20, 20, 0.8)',\n                'rgba(33, 232, 2, 0.8)',\n              ]\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: props.name,\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }}\n      />\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { teamTaskStatus } from '../../helpers/taskStatus';\nimport EmployeeProgressItem from './EmployeeProgressItem';\n\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\n\nexport default function EmployeeProgress(props) {\n  const [index, setIndex] = useState(0);\n\n  const userData = props.teamUsers.filter(user => user.role !== 1).map((user) => {\n    const taskData = teamTaskStatus(props.teamTasks, user.team_id, user.id);\n\n    return (\n      <TabPanel>\n        <EmployeeProgressItem\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          assigned={taskData.assigned}\n          inProgress={taskData.inProgress}\n          inReview={taskData.inReview}\n          late={taskData.late}\n          complete={taskData.complete}\n        />\n      </TabPanel>\n    )\n  })\n\n\n  return (\n    \n    <Tabs defaultIndex={0} onSelect={index => setIndex(index)}>\n      <TabList>\n        { props.teamUsers.filter(user => user.role !== 1).map(user => {\n          return (\n            <Tab>{user.name}</Tab>\n          )\n        }) }\n      </TabList>\n      { userData }\n    </Tabs>\n  )\n}","import React, { useState } from 'react';\n\nimport ProjectProgress from './ProjectProgress';\nimport IndependentProgress from './IndependentProgress';\nimport EmployeeProgress from './EmployeeProgress';\n\nimport '../../styles/Dashboard.css';\n\nexport default function Dashboard(props) {\n  const { tasks, teamTasks, teamUsers, role } = props;\n\n  return (\n    <div className='dashboard'>\n      <div className=\"dashboard-top\">\n        <ProjectProgress teamTasks={teamTasks} />\n      </div>\n      <div className=\"dashboard-bottom\">\n      {role === 1 && <EmployeeProgress independentTasks={tasks} teamTasks={teamTasks} teamUsers={teamUsers} />}\n      {role === 2 && <IndependentProgress independentTasks={tasks} />}\n      </div>\n    </div>\n  )\n}","export default function getTaskStatus(status) {\n  switch(status) {\n    case 0: \n      return { status: \"Assigned\", type: \"info\" }\n      break;\n    case 1:\n      return { status: \"In Progress\", type: \"primary\" }\n      break;\n    case 2:\n      return { status: \"In Review\", type: \"warning\" }\n      break;\n    case 3:\n      return { status: \"Completed\", type: \"success\" }\n      break;\n  }\n}","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { NotificationManager } from 'react-notifications'; \nimport getTaskStatus from '../../helpers/getTaskStatus';\n\nexport default function ManagerModal(props) {\n  const {\n    teamUsers,\n    taskItem,\n    show,\n    handleClose,\n    editTaskItem,\n    deleteTaskItem,\n    error,\n    setError\n  } = props;\n\n  const { \n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const [editMode, setEditMode] = useState(false);\n  const [newTaskData, setNewTaskData] = useState(taskItem);\n  const taskInfo = getTaskStatus(status);\n\n  function reset() {\n    setEditMode(false);\n  }\n\n  const handleDelete = () => {\n    console.log(taskItem);\n    deleteTaskItem(taskItem);\n    handleClose();\n  };\n\n  const handleEditToggle = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  }\n\n  const assignNewUserList = teamUsers.filter(user => user.id !== employee_id && user.role !== 1);\n\n  const onDateChange = (date) => {\n    const tmp = new Date(date).toISOString();\n    setNewTaskData(prev => ({...prev, due_date: tmp}));\n  }\n\n  const getUserNameById = (id) => {\n    return teamUsers.find(user => user.id === id).name;\n  }\n\n  function validate() {\n\n    if (newTaskData.title === \"\") {\n      NotificationManager.warning('Title must be valid', 'Error');\n      return;\n    }\n    if (newTaskData.description === \"\") {\n      NotificationManager.warning('Description must be valid', 'Error');\n      document.getElementById(\"edit-task-description\").focus();\n      return;\n    }\n    if (newTaskData.employee_id === \"\") {\n      NotificationManager.warning('Employee assigned must be valid', 'Error');\n      document.getElementById(\"edit-task-assign\").focus();\n      return;\n    }\n    if (newTaskData.due_date < new Date()) {\n      NotificationManager.warning('Due date cannot be in the past', 'Error');\n      document.getElementById(\"edit-task-date\").focus();\n      return;\n    }\n\n    editTaskItem(newTaskData)\n    reset();\n    handleClose();\n    \n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          { editMode ? newTaskData.title : title }\n          { status !== 3 && (\n            <Button \n              onClick={() => handleEditToggle()}\n              variant=\"warning\"\n            > \n              { editMode ? <>Cancel</> : <>Edit</> } \n            </Button>\n          )}\n          \n          </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        { !editMode && (\n          <>\n            <p>{description}</p>\n            <p>Assigned to: { getUserNameById(employee_id) }</p>\n            <label for=\"viewMode-due_date\">Due on: </label>\n            <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment> \n          </>\n        )}\n\n        { editMode && (\n          <>\n            <label for=\"newTitle\">Title: </label>\n            <input\n              autofocus\n              className=\"form-control edit-task-title\"\n              value={newTaskData.title}\n              onChange={(event) => setNewTaskData(prev => ({...prev, title: event.target.value}))}\n            />\n            <label for=\"newDescription\">Description: </label>\n            <textarea\n              id=\"edit-task-description\"\n              value={newTaskData.description}\n              onChange={(event) => setNewTaskData(prev => ({...prev, description: event.target.value}))}\n              type=\"text\"\n              className=\"form-control\"\n              name=\"newDescription\"\n            />\n            <label for=\"assigned\">Re-assign to:</label>\n            <select\n              id=\"edit-task-assign\"\n              name=\"assigned\"\n              className=\"form-control\"\n              onChange={(event) => setNewTaskData(prev => ({...prev, employee_id: event.target.value}))}\n            >\n              <option selected value={employee_id}>{getUserNameById(employee_id)}</option>\n              { assignNewUserList.map(item => {\n                return (\n                  <option value={item.id}>{item.name}</option>\n                )\n              }) }\n            </select>\n            <label for=\"due_date\">Due date:</label>\n            <DatePicker \n              id=\"edit-task-date\"\n              className=\"form-control\" \n              locale=\"en-US\"\n              selected={new Date(newTaskData.due_date)} \n              showTimeInput\n              onChange={(date) => onDateChange(date)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n\n            />\n          </>\n        )}\n        \n      </Modal.Body>\n      <Modal.Footer>\n        { status !== 3 && <Button variant=\"danger\" onClick={() => handleDelete()}>\n          Delete\n        </Button>\n        }\n        \n        { editMode && \n          <Button confirm variant=\"success\" onClick={() => validate()}>\n            Save\n          </Button> \n        }\n        { !editMode && status === 3 && <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> } \n        { status === 3 && is_late && <span className=\"badge badge-danger\">Late</span> }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nexport default function FeedbackList(props) {\n  const {\n    taskId,\n    feedbacks,\n  } = props;\n\n  const filterFeedbackByTask = (tid, feedbacks) => {\n    const tmp = [...feedbacks];\n\n    const PENDING = \"pending\";\n    return tmp.reverse().filter(feedback => {\n      return feedback.task_id === tid && feedback.status !== PENDING; \n    })\n  };\n\n  const feedbackItems = filterFeedbackByTask(taskId, feedbacks)\n    .map(feedback => {\n      return (\n        <div key={feedback.id}>\n          <p>{feedback.feedback_string}</p>\n          <label for=\"viewMode-due_date\">Submitted on: </label>\n          <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{feedback.submission_date}</Moment>\n          <p>{feedback.status}</p> \n        </div>\n      )\n    })\n\n  return (\n    <div>\n      {feedbackItems}\n    </div>\n  )\n}\n","export default function getUserNameById(teamUsers, id) {\n  return teamUsers.find(user => user.id === id).name;\n}","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport 'moment-timezone'\n\nimport { Modal, Button } from 'react-bootstrap';\n\nimport FeedbackList from './FeedbackList';\nimport getUserNameById from '../../helpers/getUserNameById';\nimport getTaskStatus from '../../helpers/getTaskStatus';\n\nexport default function EmployeeModal(props) {\n  const {\n    show,\n    handleClose,\n    taskItem,\n    teamUsers,\n    submissions,\n    submitTaskItem,\n  } = props;\n\n  const { \n    id,\n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const handleSubmit= () => {\n    handleClose();\n    submitTaskItem(taskItem);\n  }\n\n  const taskInfo = getTaskStatus(status);\n\n  return (<>\n    <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {description}\n    </Modal.Body>\n    <Modal.Body>\n      <p>Assigned to: {getUserNameById(teamUsers, employee_id)}</p>\n      <label for=\"viewMode-due_date\">Due on: </label>\n      <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n      <FeedbackList\n        taskId={id}\n        feedbacks={submissions}\n      />\n    </Modal.Body>\n    <Modal.Footer>\n      {(status === 0 || status === 1) &&\n          <Button confirm variant=\"primary\" onClick={() => handleSubmit()}>\n            Submit\n          </Button>\n      }\n      { <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> }\n      { is_late && <span className=\"badge badge-danger\">LATE</span> } \n    </Modal.Footer>\n  </Modal>\n  </>)\n}","import React, { useState } from 'react';\nimport { changeTaskStatus } from '../../helpers/taskStatus';\nimport classNames from 'classnames';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport 'moment-timezone'\nimport { NotificationContainer } from 'react-notifications'; \n\nimport ManagerModal from './ManagerModal';\nimport EmployeeModal from './EmployeeModal';\n\n// import { formatDateString } from './utilities/format-date';\n\nexport default function TaskItem(props) {\n  const {\n    role,\n    taskItem,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setError\n  } = props;\n  \n  const { \n    title, \n    description, \n    due_date, \n    creation_date, \n    status, \n    is_late\n  } = taskItem;\n  \n  const [show, setShow] = useState(false);\n  \n  const taskClass = classNames(\"task__item\", {\n    'task__item--assigned' : is_late === false && status === 0,\n    'task__item--in-progress' : is_late === false && status === 1,\n    'task__item--in-review' : is_late === false && status === 2,\n    'task__item--in-review-late': is_late === true && status === 2,\n    'task__item--complete' : status === 3\n  });\n\n  /**\n   *  could store all these fn into a helper file\n   * */\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <NotificationContainer />\n      <li className={taskClass}\n        onClick={event => setShow(true)}\n      >\n        <h4>{title}</h4>\n        <p>{description}</p>\n        <label for=\"creation_date\">Assigned on:</label>\n        <br />\n        <Moment format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n        <br />\n        <label for=\"due_date\">Due on:</label>\n        <br />\n        <Moment format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment> \n        <br />\n      </li>\n\n      <form\n        onSubmit={event => event.preventDefault()}\n        className=\"form-group\"\n      >\n        { role === 1 &&\n          <ManagerModal \n            teamUsers={teamUsers}\n            taskItem={taskItem}\n            show={show}\n            handleClose={handleClose}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            error={error}\n            setError={setError}\n          />\n        }\n        {role === 2 &&\n          <EmployeeModal\n            show={show}\n            taskItem={taskItem}\n            teamUsers={teamUsers}\n            submissions={submissions}\n            handleClose={handleClose}\n            submitTaskItem={submitTaskItem}\n          />\n        }\n      </form>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport TaskItem from './TaskItem';\nimport sortTasks from '../../helpers/sortTasks';\nimport findTaskItemById from '../../helpers/findTaskItemById';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function TaskProgress(props) {\n  const {\n    role,\n    tasks,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setError,\n    moveTask,\n    setTasks\n  } = props;\n\n  // local states\n\n  const [sortedTasks, setSortedTasks] = useState({});\n  const [trashVisible, setTrashVisible] = useState(false);\n\n  useEffect(()=> {\n    const updated = sortTasks(tasks);\n    setSortedTasks(updated);\n  }, [tasks])\n\n  const sortedComponents = {};\n\n  for (const key in sortedTasks) {\n    sortedComponents[key] = sortedTasks[key].map((task, index) => {\n      const draggable = task.status === 3 || task.status === 2 ? true : false;\n      \n      if (task.status !== 3) {\n        return (\n          <Draggable key={task.id} draggableId={\"\" + task.id} index={index} isDragDisabled={draggable} >\n            {(provided, snapshot) => (\n              <div \n                key={task.id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TaskItem \n                  key={task.id}\n                  taskItem={task}\n                  role={role}\n                  submissions={submissions}\n                  editTaskItem={editTaskItem}\n                  deleteTaskItem={deleteTaskItem}\n                  submitTaskItem={submitTaskItem}\n                  teamUsers={teamUsers}\n                  error={error}\n                  setError={setError}\n                />\n              </div>\n            )}\n          </Draggable>\n        )\n      } else {\n        return (\n          <TaskItem \n            key={task.id}\n            taskItem={task}\n            role={role}\n            submissions={submissions}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            submitTaskItem={submitTaskItem}\n            teamUsers={teamUsers}\n            error={error}\n            setError={setError}\n          />\n        )\n      }\n    })\n  }\n\n  const { assigned, inProgress, completed } = sortedComponents;\n\n  const onDragEnd = (res) => {\n    setTrashVisible(false);\n    const { destination, source, draggableId, droppableId } = res;\n\n    const task = findTaskItemById(tasks, Number(draggableId));\n    if (!destination) {\n      return;\n    }\n\n    if (role === 2 && source.droppableId === \"assigned\" && destination.droppableId === \"inProgress\") {\n      console.log(task);\n      // console.log(tasks.id['2'])\n      moveTask(task, 1);\n      \n      // setTasks(prev => ({...prev}))\n    }\n    if (role === 2 && source.droppableId === \"inProgress\" && destination.droppableId === \"assigned\") {\n      moveTask(task, 0);\n    }\n\n    if (role === 1 && destination.droppableId === \"trash\") {\n      deleteTaskItem(task);\n    }\n  }\n\n  const onBeforeCapture = () => {\n    setTrashVisible(true);\n  }\n\n  return (\n    <div className=\"task-progress\">\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        onBeforeCapture={onBeforeCapture}\n      >\n        <div key=\"assigned\">\n          <h1>Assigned</h1>\n          <Droppable droppableId=\"assigned\">\n            {(provided, snapshot) => (\n              <div \n                key=\"assigned\"\n                index=\"1\"\n                ref={provided.innerRef} \n                {...provided.droppableProps}\n              >\n                { assigned }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n\n        <div key=\"inProgress\">\n          <h1>In-Progress</h1>\n          <Droppable droppableId=\"inProgress\">\n            {(provided, snapshot) => (\n              <div \n                key=\"inProgress\"\n                index=\"2\"\n                ref={provided.innerRef} \n                {...provided.droppableProps}\n              >\n                { inProgress }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n\n        { role === 1 && (\n          <div key=\"trash\" className={trashVisible ? \"trash--visible\" : \"trash--hidden\"} >\n            <Droppable droppableId=\"trash\">\n              {(provided, snapshot) => (\n                <div\n                  key=\"trash\"\n                  index=\"3\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <h1>Delete</h1>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )} \n      </DragDropContext>\n\n      <div>\n        <h1>Completed</h1>\n        { completed }\n      </div>\n    </div>\n  )\n}","export default function sortTasks(tasks) { \n  const toReturn = {\n    assigned: [],\n    inProgress: [],\n    completed: [],\n  };\n\n  for (const task of tasks) {\n    switch (task.status) {\n      case 1:\n        toReturn.inProgress.push(task);\n        break;\n      case 2:\n        toReturn.inProgress.push(task);\n        break;\n      case 3:\n        toReturn.completed.push(task);\n        break;  \n      default:\n        toReturn.assigned.push(task);\n        break;\n    }\n  }\n  return toReturn;\n};\n  ","export default function filterTasksByUser(tasks, id) {\n  return tasks.find(task => task.id === id);\n}","import React from 'react';\n\nexport default function MyTeamItem(props) {\n  const {\n    member,\n    selectTasksByUser,\n  } = props;\n\n  const { role, name, email, phone_number } = member;\n\n  const roles = {\n    1 : 'Project Manager',\n    2 : 'Employee'\n  }\n\n  return (\n    <li\n    className=\"team-progress\"\n    onClick={() => selectTasksByUser(member)}\n    >\n        <h4>{name}</h4>\n        <h5>{email}</h5>\n        <h5>{phone_number}</h5>\n        <h6>{roles[role]}</h6>\n    </li>\n  )\n}","import React from 'react';\nimport axios from 'axios';\n\nimport MyTeamItem from './MyTeamItem';\n\nexport default function MyTeam(props) {\n  const {\n    selectTasksByUser,\n    teamUsers,\n  } = props;\n\n  const teamMembers = teamUsers.map((member) => {\n    return (\n    <li className=\"team-item\">\n    <MyTeamItem\n      key={member.id}\n      member={member}\n      selectTasksByUser={selectTasksByUser}\n    />\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"team-list\">\n      <h1>My Team</h1>\n      <ul>\n      {teamMembers}\n      </ul>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function TaskResource(props) {\n  return (\n    <h1>Task Resources</h1>\n  )\n}","export default function filterTasksByUser(uid, tasks) {\n  return tasks.filter(task => task.employee_id === Number(uid));\n}","import React, { useState, useEffect } from 'react';\n\n\n// import ProjectProgress from './ProjectProgress';\nimport TaskProgress from './TaskProgress';\nimport MyTeam from './MyTeam';\nimport TaskResource from './TaskResource';\n\nimport filterTasksByUser from '../../helpers/filterTasksByUser';\n\nimport '../../styles/Tasks.css';\n\nexport default function Tasks(props) {\n  const {\n    role,\n    tasks,\n    teamUsers,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    error,\n    setError,\n    moveTask,\n    setTasks\n  } = props;\n\n  const [selectedTasks, setSelectedTasks] = useState(tasks);\n\n  useEffect(() => {\n    setSelectedTasks(tasks);\n  }, [tasks])\n\n  const selectTasksByUser = (user) => {\n    if (user.role === 1) {\n      setSelectedTasks(tasks);\n      return;\n    }\n    const userTasks = filterTasksByUser(user.id, tasks);\n    setSelectedTasks(userTasks);\n  }\n\n  return (\n    <div className='dashboard'>\n      <div className=\"dashboard-top\">\n        <TaskProgress \n          role={role} \n          tasks={selectedTasks} \n          teamUsers={teamUsers} \n          submissions={submissions}\n          deleteTaskItem={deleteTaskItem} \n          editTaskItem={editTaskItem}\n          submitTaskItem={submitTaskItem}\n          error={error}\n          setError={setError}\n          moveTask={moveTask}\n          setTasks={setTasks}\n        />\n      </div>\n      <div className=\"dashboard-bottom\">\n        { role === 1 && \n          <MyTeam \n            teamUsers={teamUsers} \n            selectTasksByUser={selectTasksByUser}\n          />}\n        { role === 2 && <TaskResource />}\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function ChatLogItem(props) {\n  const { avatar, sender, message, time_locale } = props;\n  return (\n    <div className=\"chat-item\">\n      <img className=\"chat-avatar\" alt=\"Employee Avatar\" src={avatar}></img>\n      <div className=\"chat-item-right\">\n        <div className=\"chat-message-sender\">{sender}</div>\n        <div className=\"chat-message\">{message}</div>\n        <span className=\"chat-message-time\">{time_locale}</span>\n      </div>\n    </div>\n  )\n}","import { React, useCallback, useState, useEffect, useRef } from 'react';\nimport { useObserveScrollPosition } from 'react-scroll-to-bottom';\n\nimport ChatLogItem from \"./ChatLogItem\";\n\nexport default function ChatLog(props) {\n  const { messages, chatInfo, getPrevMessages } = props;\n\n  const [visible, setVisible] = useState(false);\n  const [page, setPage] = useState(1);\n  const loader = useRef(null);\n  const container = useRef(null);\n  // here we handle what happens when user scrolls to Load More div\n  // in this case we just update page variable\n  const handleObserver = (entities) => {\n    const target = entities[0];\n    if (target.isIntersecting) {   \n      setPage((page) => page + 1)\n    }\n  }\n\n  useEffect(() => {\n    var options = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 1.0\n    };\n    // initialize IntersectionObserve and attaching to Load More div\n    const observer = new IntersectionObserver(handleObserver, options);\n    if (loader.current) {\n      observer.observe(loader.current)\n    }\n  }, []);\n\n  useEffect(() => {\n    getPrevMessages();\n  }, [page]);\n\n  useEffect(() => {\n    setVisible(true);\n    setTimeout(() => {\n      setVisible(false);\n    }, 2000);\n  }, [chatInfo])\n\n  const messageComponents = messages.map((messageData, index) => {\n    const { sender, message, sender_id, time_iso, time_locale } = messageData;\n    return (\n      <ChatLogItem \n        key={`${sender_id}: ${time_iso}`}\n        avatar=\"https://randomuser.me/api/portraits/men/73.jpg\"\n        sender={sender} \n        message={message}\n        time_locale={time_locale}\n      />\n    )\n  })\n\n  return (\n    <div className=\"chat-log\" ref={container}>\n      <div className=\"loading\" ref={loader}></div>\n      {messageComponents}\n      { visible && \n        <div className=\"chat-log-bottom\">\n          <span className=\"clat=info\">\n            {chatInfo}\n          </span>\n        </div>\n      }\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\n\nexport default function MembersListItem(props) {\n  const { name, role, avatar, online } = props;\n  const imgClass = classNames('chat-avatar', 'members-list-avatar', { 'avatar-online': online })\n  const itemClass = classNames('members-list-item', { 'member-item-online': online })\n  return (\n    <div className={itemClass}>\n      <img src={avatar} alt= \"User Avatar\" className={imgClass}></img>\n      <div>\n        <div>{name}</div>\n        <div>{role}</div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport MembersListItem from \"./MembersListItem\";\n\nconst roles = [\"Project Manager\", \"Developer\"];\n\nexport default function MembersList(props) {\n  const { teamUsers, onlineUsers } = props;\n\n  const memberComponents = teamUsers.map(member => {\n    const {id, name, role} = member;\n    return (\n      <MembersListItem \n        key={id}\n        name={name} \n        role={roles[role-1]}\n        avatar=\"https://randomuser.me/api/portraits/men/73.jpg\"\n        online={onlineUsers.includes(id)}\n      />\n    );\n  })\n  return (\n    <div className=\"members-list\">\n      {memberComponents}\n    </div>\n  )\n}","import { React, useState } from 'react';\n\n\nexport default function InputBox(props) {\n  const { sendMessage } = props;\n  const [ message, setMessage ] = useState('');\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if (message) {\n      sendMessage( message );\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"input-box\">\n      <form \n        autoComplete=\"off\"\n        onSubmit={e => submitForm(e)}\n      >\n        <input \n          name=\"msg\"\n          type=\"text\"\n          placeholder=\"Your message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}","import { React } from 'react';\n\nimport ChatLog from \"./ChatLog\";\nimport MembersList from \"./MembersList\";\nimport InputBox from \"./InputBox\";\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport '../../styles/Chat.css';\n\nimport useChat from '../../hooks/useChat';\n\nexport default function Chat(props) {\n  const { socket, userInfo, teamUsers } = props\n\n  const { \n    messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  } = useChat(socket, userInfo);\n\n  return (\n    <div className=\"chat-container\">\n      <button onClick={()=> getPrevMessages()}>Test Get Previous Messages</button>\n      <div className=\"chat-top\">\n        <ScrollToBottom className=\"chat-scroll\">\n          <ChatLog \n            messages={messages} \n            chatInfo={joinMessage} \n            getPrevMessages={getPrevMessages}\n          />\n        </ScrollToBottom>\n        <MembersList teamUsers={teamUsers} onlineUsers={onlineUsers} />\n      </div>\n      <InputBox sendMessage={sendMessage} />\n    </div>\n  )\n};","import { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nimport formatDateString from \"../utilities/format-date\";\n\nconst MESSAGES_URL = \"http://localhost:8080/api/messages\";\n\nexport default function useChat(socket, userInfo) {\n  const { id, name, team_id } = userInfo;\n\n  const [ messages, setMessages ] = useState([]);\n  const [ onlineUsers, setOnlineUsers ] = useState([]);\n  const [ joinMessage, setJoinMessage ] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`${MESSAGES_URL}/15`)\n    .then(res => setMessages(res.data));\n  }, []);\n\n  useEffect(() => {\n    //socket = io();\n\n    socket.emit('joining msg', name, id);\n\n    socket.on('user joined', (users, username) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" joined the chat\")\n    });\n\n    socket.on('user left', (users, username) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" left the chat\")\n    });\n  \n    socket.on('chat message', function(messageData) {\n      setMessages(prev => [...prev, messageData])\n    });\n\n    socket.on('get previous messages', messagesData => {\n      setMessages(prev => [...messagesData, ...prev]);\n      console.log(messagesData);\n    });\n\n    socket.on('message saved', function(messageData) {\n      console.log('message saved: ', messageData);\n    });\n\n    return () => {\n      socket.off('user joined');\n      socket.off('user left');\n      socket.off('chat message');\n      socket.off('get previous messages');\n      socket.off('message saved');\n      socket.emit('leaving msg', name, id );\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getPrevMessages = () => {\n    if (messages[0]) {\n      socket.emit('get previous messages', messages[0].time_iso, 12);\n    }\n  }\n\n  const sendMessage = message => {\n    const now = new Date();\n    const messageData = {\n      message,\n      team_id,\n      sender_id: id,\n      sender: name,\n      time_iso: now.toISOString(),\n      time_locale: formatDateString(now),\n    }\n    socket.emit('chat message', messageData);\n  };\n\n  return { \n    messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  };\n}","export default function formatDateString(date) {\n  const dateString = date.toLocaleDateString('en-US', {\n    day:    'numeric',\n    month:  'short',\n    year:   'numeric'\n  });\n\n  const timeString = date.toLocaleTimeString(undefined, {\n    hour:   'numeric',\n    minute: '2-digit',\n});\n\n  return dateString + \" at \" + timeString;\n}","export function getEmployeeName (data, empID) {\n  let result = '';\n\n  for (const index of data) {\n    if (index.id === empID) {\n      result = index.name;\n    }\n  }\n  return result;\n}","import React, { useState } from 'react';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\nimport { Button, Modal } from 'react-bootstrap';\nimport Moment from 'react-moment';\n\nexport default function Feedback(props) {\n  const {\n    teamUsers,\n    selectedTask,\n    show,\n    setShow,\n    giveFeedback\n  } = props; \n\n  const {\n    title,\n    description,\n    employee_id,\n    creation_date,\n    due_date,\n    is_late,\n  } = selectedTask;\n\n  const [feedback, setFeedback] = useState({\n    message: \"\",\n  });\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  const handleSubmit = (accepted) => {\n    giveFeedback(feedback.message, selectedTask, accepted);    \n    setFeedback(prev => ({...prev, message: \"\"}));\n    setShow(false);\n  }\n\n  return (\n\n    <div className=\"feedback-container\">\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {title}\n          </Modal.Title>\n        </Modal.Header>\n\n        <form class=\"form-group\" onSubmit={event => event.preventDefault()}>\n          <Modal.Body>\n            <p>{description}</p>\n            <p>Assigned to: {getEmployeeName(teamUsers, employee_id)}</p>\n            <p>On: \n              <Moment format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment>\n            </p>\n            <p>Due on: \n              <Moment format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n              { is_late && (<span className=\"badge badge-danger\">LATE</span>) }\n            </p>\n            \n            <div>\n              <label for=\"feedback\">Feedback:</label>\n              <textarea\n                name=\"feedback\"\n                className=\"form-control\"\n                value={feedback.message}\n                onChange={event => setFeedback(prev => ({...prev, message: event.target.value}))}\n              />\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"danger\"\n              onClick={(event) => handleSubmit(false)}\n            >\n              Reject\n            </Button>\n            <Button \n              variant=\"success\"\n              onClick={(event) => handleSubmit(true)}\n            >\n              Accept\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function SubmissionItem(props) {\n\n  const { title, name, description, is_late, is_viewed, taskData, setSelectedTask, setShow } = props;\n\n  const handleOpen = () => {\n    setSelectedTask(taskData);\n    setShow(true);\n  }\n\n  return (\n    <li onClick={() => handleOpen()}>\n      <h4>{title}</h4>\n      <h4>{name}</h4>\n      <h4>{description}</h4>\n      <h4>{is_late && 'LATE'}</h4>\n      <h4>{is_viewed && 'Feedback Given'}</h4>\n    </li>\n  )\n}","import React from 'react';\n\nimport SubmissionItem from './SubmissionItem';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function SubmisionList(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    setSelectedTask, \n    setShow \n  } = props;\n\n  const listedTeamTasks = teamTasks.map((task) => {\n    return (\n      task.status === 2 &&\n      <li className=\"task-in-progress\" key={task.id}>\n        <SubmissionItem\n          key={task.id}\n          title={task.title}\n          description={task.description}\n          name={getEmployeeName(teamUsers, task.employee_id)}\n          is_late={task.is_late}\n          is_viewed={task.is_viewed}\n          taskData={task}\n          setSelectedTask={setSelectedTask}\n          setShow={setShow}\n        />\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"task-progress\">\n      <ul>\n        {listedTeamTasks}\n      </ul>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Feedback from './Feedback';\nimport SubmissionList from './SubmissionList';\n\nexport default function Submissions(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    giveFeedback,\n  } = props;\n  \n  const [selectedTask, setSelectedTask] = useState({});\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-top\">\n        <SubmissionList\n          teamUsers={teamUsers}\n          teamTasks={teamTasks}\n          setSelectedTask={setSelectedTask}\n          setShow={setShow}\n        />\n      </div>\n      <div className=\"dashboard-bottom\">\n        <Feedback\n          teamUsers={teamUsers}\n          selectedTask={selectedTask}\n          show={show}\n          setShow={setShow}\n          giveFeedback={giveFeedback}\n        />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function SidebarItem(props) {\n  const menuClass = classNames(\"sidebar-list__item\", {\n    'sidebar-list__item--selected': props.selected\n  })\n\n  return (\n    <li\n      className={menuClass}\n      onClick={() => props.setMenu(props.name)}\n    >\n      <h2>{props.name}</h2>\n    </li>\n  )\n}","import React, { useState } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport { Modal, Button } from 'react-bootstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications'; \n\nimport getUserNameById from '../../helpers/getUserNameById';\n\nexport default function NewTaskItem(props) {\n  \n  // to force a bug for error messages\n  const dateNow = new Date();\n  dateNow.setDate(dateNow.getDate() + 7);\n  dateNow.setHours(17); \n  dateNow.setMinutes(0);\n\n  const {\n    team,\n    teamUsers,\n    createTaskItem, \n    error,\n    setError\n  } = props;\n\n  const [taskItem, setTaskItem] = useState({\n    projecttask_id: team,\n    title: \"\",\n    description: \"\",\n    employee_id: \"\",\n    due_date: dateNow,\n  });\n\n  const [show, setShow] = useState(false);\n\n  const teamMembersList = teamUsers.filter(user => user.role !== 1);\n\n  const handleClose = () => setShow(false);\n\n  function reset() {\n    setTaskItem(prev => ({\n      ...prev,\n      title: \"\",\n      description: \"\",\n      employee_id: \"\",\n    }))\n  }\n\n  function validate() {\n    const { title, description, employee_id, due_date } = taskItem;\n\n    if (title === \"\") {\n      NotificationManager.warning('Title must be valid', 'Error');\n      document.getElementById(\"new-task-title\").focus();\n      return;\n    }\n    if (description === \"\") {\n      NotificationManager.warning('Description must be valid', 'Error');\n      document.getElementById(\"new-task-description\").focus();\n      return;\n    }\n    if (employee_id === \"\") {\n      NotificationManager.warning('Employee assigned must be valid', 'Error');\n      document.getElementById(\"new-task-assign\").focus();\n      return;\n    }\n    if (due_date < new Date()) {\n      NotificationManager.warning('Due date cannot be in the past', 'Error');\n      document.getElementById(\"new-task-date\").focus();\n      return;\n    }\n\n    createTaskItem(taskItem)\n    reset();\n    setShow(false);\n  }\n\n  return (\n    <div>\n      <span className=\"new-task-btn\" onClick={() => setShow(true)}><i class=\"fas fa-plus new-task-btn\"></i> New Task</span>\n\n      <NotificationContainer />\n      <form \n        className=\"form-group\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <Modal show={show} onHide={handleClose} onEntered={() => document.getElementById(\"new-task-title\").focus()} >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <h3>New Task</h3>\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <label for=\"title\">Title: </label>\n            <input\n              id=\"new-task-title\"\n              name=\"title\"\n              className=\"form-control\"\n              value={taskItem.title}\n              onChange={(event) => setTaskItem(prev => ({...prev, title: event.target.value}))}\n            />\n\n            <label for=\"description\">Description: </label>\n            <textarea\n              id=\"new-task-description\"\n              name=\"description\"\n              className=\"form-control\"\n              value={taskItem.description}\n              onChange={(event) => setTaskItem(prev => ({...prev, description: event.target.value}))}\n            />\n\n            <label for=\"assignTo\">Assign to: </label>\n            <select class=\"form-control\"\n              id=\"new-task-assign\"\n              onChange={event => setTaskItem(prevTaskItem => ({...prevTaskItem, employee_id: Number(event.target.value)}))}\n            >\n              <option selected value={\"\"}></option>\n              { teamMembersList.map(member => {\n                return (\n                  <option value={member.id}>{member.name}</option>\n                )\n              })  }\n            </select>\n\n            <label for =\"due-date\">Due on: </label>\n            <DatePicker \n              id=\"new-task-date\"\n              className=\"form-control\" \n              selected={new Date(taskItem.due_date)} \n              showTimeInput\n              onChange={date => setTaskItem(prevTaskItem => ({...prevTaskItem, due_date: date}))}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"primary\"\n              onClick={event => (validate())}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </form>\n    </div>\n\n  )\n}","import React from 'react';\nimport { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent, Menu, MenuItem } from 'react-pro-sidebar';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport SidebarItem from './SidebarItem';\nimport NewTaskItem from '../Tasks/NewTaskItem';\n\nexport default function Sidebar(props) {\n  const {\n    selectedMenu,\n    userInfo,\n    teamUsers,\n    setMenu,\n    createTaskItem,\n    error,\n    setError\n  } = props\n\n  const menuItems = [\n    'Dashboard',\n    'Tasks',\n    'Chat',\n    userInfo.role === 1 ? 'Submissions' : ''\n  ];\n\n  return (\n    <ul>\n     { menuItems.map((item, index) => {\n        return (\n          <SidebarItem\n            key={index}\n            name={item}\n            selected={selectedMenu === item}\n            setMenu={setMenu}\n          />\n        )\n      })}\n      { userInfo.role === 1 && (\n        <div>\n          <NewTaskItem \n            team={userInfo.team_id}\n            teamUsers={teamUsers} \n            createTaskItem={createTaskItem} \n            error={error}\n            setError={setError}\n          />\n        </div>\n      )}\n    </ul>\n  )\n}","import React from 'react';\n\nimport Moment from 'react-moment';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function DeadlineListItem(props) {\n\n  const { title, description, due_date, creation_date, assignedTo, userInfo, teamUsers, is_late } = props;\n\n  return (\n    <li>\n      <h4>{props.title}</h4>\n      { userInfo.role === 1 && <p>Assigned to: {getEmployeeName(teamUsers, assignedTo)}</p> } \n      <label for=\"creation_date\">On:</label>\n      <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n      <br />\n      <label for=\"due_date\">Due:</label>\n      <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment> \n      { is_late && <span className=\"badge badge-danger\">LATE</span> }\n    </li>\n  )\n  \n}","import React from 'react';\n\nimport DeadlineListItem from './DeadlineListItem';\n\nexport default function DeadlineList(props) {\n\n  const { deadlines, userInfo, teamUsers } = props;\n\n  const filteredUserDeadlinesByUser = \n    deadlines\n    .filter(task => task.employee_id === userInfo.id)\n    .map((task) => {\n      return (\n        <li className=\"deadlines-item\">\n          <DeadlineListItem\n            key={task.id}\n            title={task.title}\n            description={task.description}\n            due_date={task.due_date}\n            creation_date={task.creation_date}\n            userInfo={userInfo}\n            assignedTo={task.employee_id}\n            is_late={task.is_late}\n            teamUsers={teamUsers}\n          />\n        </li>\n      )\n    })\n\n  const filteredUserDeadlines = deadlines.map(task => {\n    return (\n      <li className=\"deadlines-item\">\n        <DeadlineListItem\n          key={task.id}\n          title={task.title}\n          description={task.description}\n          due_date={task.due_date}\n          creation_date={task.creation_date}\n          userInfo={userInfo}\n          assignedTo={task.employee_id}\n          is_late={task.is_late}\n          teamUsers={teamUsers}\n        />\n      </li>\n    )\n  })\n\n  return (\n    <div>\n      <ul>\n        { userInfo.role === 1 ? filteredUserDeadlines : filteredUserDeadlinesByUser }\n      </ul>\n    </div>\n  )\n}","export default function filterDeadlineTasks(tasks) {\n  const dateNow = new Date().getTime();\n  const convertDate = (date) => new Date(date).getTime();\n\n  return tasks.filter(task => convertDate(task.due_date) < dateNow && task.status === 0 || task.status === 1);\n}\n","import React from 'react';\n\nimport DeadlineList from './DeadlineList';\nimport filterDeadlineTasks from '../../helpers/filterDeadlineTasks';\n\nconst roles = {\n  1: \"Project Manager\",\n  2: \"Employee\"\n}\n\nexport default function UserInfo(props) {\n\n  const { userInfo, tasks, teamUsers } = props;\n  const filteredTasks = filterDeadlineTasks(tasks);\n\n  return (\n    <div className=\"user-info\">\n      { userInfo && ( \n        <>\n        <img src={userInfo.avatar} className=\"user-avatar\"></img>\n        <h4>{userInfo.name} </h4>\n        <h5>{roles[userInfo.role]}</h5>\n        <div className=\"deadlines\">\n          <DeadlineList deadlines={filteredTasks} userInfo={userInfo} teamUsers={teamUsers} />\n        </div>\n        </>\n        ) \n      }\n    </div>\n  )\n} ","import React, { useState } from 'react';\n\nexport default function Login(props) {\n  const { setLogin } = props;\n  return (\n    <form>\n      <h1>Enter your user ID: </h1>\n      <input\n        onChange={event => setLogin(event.target.value)}\n      />\n      <button\n        onSubmit={event => setLogin(event.target.value)}\n      >Submit</button>\n    </form>\n  )\n}","import '../styles/App.css';\nimport { useState, useEffect } from 'react';\nimport { Route, BrowserRouter as Router, Switch, withRouter } from 'react-router-dom';\n\nimport Dashboard from './Dashboard';\nimport Tasks from './Tasks';\nimport Chat from './Chat';\nimport Submissions from './Submissions';\nimport Sidebar from './Sidebar';\nimport UserInfo from './Dashboard/UserInfo';\nimport Login from './Login';\n\nimport useApplicationData from '../hooks/useApplicationData';\nimport useNotifications from '../hooks/useNotifications';\nimport useSocket from '../hooks/useSocket';\nimport useTasks from '../hooks/useTasks'\nimport { taskStatus } from '../helpers/taskStatus';\nimport { NotificationManager, NotificationContainer } from 'react-notifications';\n\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-notifications/lib/notifications.css';\nimport 'react-tabs/style/react-tabs.css';\nimport { Button } from 'react-bootstrap';\n\nconst DASHBOARD = \"Dashboard\";\nconst TASKS = \"Tasks\";\nconst CHAT = \"Chat\";\nconst SUBMISSIONS = \"Submissions\"\n\nfunction App() {\n  const [selectedMenu, setMenu] = useState(DASHBOARD);\n  const [loginToken, setLoginToken] = useState(0);\n  const { socket } = useSocket();\n  const [errorNotification, setErrorNotification] = useState({\n    title: \"\",\n    message: \"\",\n  });\n\n  const { \n    state,\n    setTasks,  \n    setSubmissions,\n  } = useApplicationData(socket, loginToken, setErrorNotification);\n  \n  const {\n    userTasks,\n    userInfo,\n    role,\n    teamTasks,\n    teamUsers,\n    deadlines,\n    submissions\n  } = state;\n\n  const { \n    userNotification,\n    managerNotification,\n    setUserNotification,\n    setManagerNotification\n  } = useNotifications(userInfo, setMenu, NotificationManager);\n\n  const {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  } = useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo);\n\n\n  if ( loginToken === 0 ) {\n    return (\n      <section className=\"main\">\n        { loginToken === 0 && <Login setLogin={setLoginToken}/> }\n      </section>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <NotificationContainer />\n      <section className=\"sidebar\">\n        <img \n          alt=\"Scrum-ptious Logo\"\n          className=\"sidebar-centered\"\n          src=\"https://logoipsum.com/logo/logo-25.svg\"\n        />\n        <nav className=\"sidebar__menu\">\n          <Sidebar\n            selectedMenu={selectedMenu}\n            userInfo={userInfo}\n            teamUsers={teamUsers}\n            setMenu={setMenu}\n            createTaskItem={createTaskItem}\n            errorNotification={errorNotification}\n            setErrorNotification={setErrorNotification}\n          />\n        </nav>\n        <Button variant=\"outline-light\"\n        onClick={() => setLoginToken(0)}>\n          Log out\n        </Button>\n      </section>\n      <section className=\"main\">\n        { selectedMenu === DASHBOARD && \n          <Dashboard\n            tasks={userTasks} \n            role={role} \n            teamTasks={teamTasks}\n            teamUsers={teamUsers}\n          /> }\n        { selectedMenu === TASKS && \n          <Tasks \n            socket={socket} \n            role={role} \n            tasks={role === 1 ? teamTasks : userTasks} \n            teamUsers={teamUsers} \n            submissions={submissions}\n            deleteTaskItem={deleteTaskItem} \n            editTaskItem={editTaskItem}\n            submitTaskItem={submitTaskItem}\n            errorNotification={errorNotification}\n            setErrorNotification={setErrorNotification}\n            moveTask={moveTask}\n            setTasks={setTasks}\n          />}\n        { selectedMenu === CHAT && \n          <Chat \n            socket={socket} \n            userInfo={userInfo} \n            teamUsers={teamUsers}\n          />}\n        { selectedMenu === SUBMISSIONS &&\n          <Submissions\n            teamUsers={teamUsers}\n            teamTasks={teamTasks}\n            giveFeedback={giveFeedback}\n          />}\n      </section>\n      <section className=\"user__info\">\n        <UserInfo userInfo={userInfo} tasks={teamTasks} teamUsers={teamUsers} /> \n      </section>\n    </div>\n  );\n}\n\nexport default App","import { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nexport default function useSocket() {\n  const [socket, setSocket] = useState({});\n\n  useEffect(() => {\n    const conn = io();\n    setSocket(conn);\n\n    return () => {\n      conn.close();\n    }\n  }, [])\n\n  return { socket };\n};","import { useState, useEffect } from 'react';\nimport filterTasksByUser from '../helpers/filterTasksByUser';\n// import { Prev } from 'react-bootstrap/esm/PageItem';\n\nexport default function useApplicationData(socket, loginToken, setError) {\n  const [state, setState] = useState({\n    userInfo: {},\n    role: 0,\n    userTasks: [],\n    teamUsers: [],\n    teamTasks: [],\n    deadlines: [],\n    submissions: [],\n  });\n  \n  const setTasks = teamTasks => {\n    const userTasks = filterTasksByUser(loginToken, teamTasks);\n    setState(prev => ({...prev, teamTasks, userTasks}));\n  }\n  const setSubmissions = submissions => setState(prev => {\n    return {...prev, submissions }\n  })\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    socket.emit('user logged in', loginToken);\n\n    socket.on('login data', loginData => {\n      const { userTasks, userInfo, teamTasks, teamUsers, deadlines, submissions } = loginData;\n      setState(prev => ({ \n        ...prev, \n        userTasks, \n        userInfo, \n        teamTasks, \n        teamUsers, \n        deadlines,\n        submissions, \n        role: userInfo.role, \n      }));\n    });\n\n    socket.on('error', (error, data) => {\n      setError(prev => ({...prev, title: data.title, message: error}));\n    });\n\n    return () => {\n      if (!loginToken) {\n        socket.off('login data'); \n        socket.off('error');\n      }\n    }\n  }, [loginToken]);\n\n\n  return { \n    state, \n    setTasks,  \n    setSubmissions,\n  }\n}","import { useState, useEffect } from 'react';\n\nexport default function useNotifications(userInfo, setMenu, NotificationManager) {\n  const [userNotification, setUserNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  const [managerNotification, setManagerNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  useEffect(() => {\n    if (userNotification.message !== \"\" && userNotification.user === userInfo.id) {\n      switch(userNotification.type) {\n        case 'info':\n          NotificationManager.info(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          });\n          break;\n        case 'success':\n          NotificationManager.success(userNotification.message, userNotification.title);\n          break;\n        case 'warning':\n          NotificationManager.warning(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          })\n          break;\n        case 'error':\n          NotificationManager.error(userNotification.message, userNotification.title);\n          break;\n      }\n      setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n    if (managerNotification.message !== \"\" && managerNotification.user === userInfo.id) {\n      console.log(managerNotification.type)\n      switch(managerNotification.type) {\n        case 'info':\n          NotificationManager.info(managerNotification.message, managerNotification.title);\n          break;\n        case 'success':\n          NotificationManager.success(managerNotification.message, managerNotification.title);\n          break;\n        case 'warning':\n          NotificationManager.warning(managerNotification.message, managerNotification.title);\n          break;\n        case 'error':\n          NotificationManager.error(managerNotification.message, managerNotification.title);\n          break;\n      }\n      setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n  }, [userNotification, managerNotification])\n\n  return {\n    userNotification,\n    managerNotification,\n    setUserNotification,\n    setManagerNotification\n  }\n}","import { useState, useEffect } from 'react';\nimport findSubmissionByTask from '../helpers/findSubmissionByTask';\n\nexport default function useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo) {\n  const TASK_STATUS = {\n    ASSIGNED: 0,\n    IN_PROGRESS: 1,\n    IN_REVIEW: 2,\n    COMPLETE: 3,\n  }\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    socket.on('tasks update', (teamTasks, userToAlert) => {\n      setTasks(teamTasks);\n      setUserNotification(prev => ({...prev, message: \"Your tasks have updated\", user: userToAlert, title: \"Click to view\", type: \"warning\"}))\n    });\n    \n    socket.on('tasks action saved', (op, task) => {\n      switch(op) {\n        case 'CREATE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Created\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'EDIT':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Updated\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'DELETE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Deleted\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'FEEDBACK':\n          setManagerNotification(prev => ({...prev, message: \"Submission has been updated\", title: \"Feedback Sent\", type: \"success\", user: Number(loginToken) }))\n          break;\n      }\n    });\n\n    socket.on('submt/feedback', (result, userToAlert) => {\n      if (userInfo.role !== 1) {\n        setUserNotification(prev => ({...prev, message: \"You have new feedback\", user: userToAlert, title: \"Click to view\", type: \"info\"}))\n      }\n      setTasks(result.teamTasks);\n      setSubmissions(result.submissions);\n    });\n      \n    return () => {\n      socket.off('tasks update');\n      socket.off('tasks action saved');\n      socket.off('submit/feedback');\n    }\n  }, [loginToken]);\n\n  const CREATE = 'CREATE';\n  const EDIT   = 'EDIT';\n  const DELETE = 'DELETE';\n\n  const moveTask = (taskItem, STATUS) => {\n    socket.emit('move task', taskItem, STATUS);\n  }\n\n  const createTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, CREATE);\n  };\n\n  const editTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, EDIT);\n  };\n\n  const deleteTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, DELETE);\n  };\n\n  const submitTaskItem = taskItem => {\n    const toSubmit = {...taskItem, status: TASK_STATUS.IN_REVIEW}\n    const submitTaskData = {\n      submission: {\n        feedback_string: '', \n        submission_date: new Date().toISOString(), \n        task_id: taskItem.id\n      },\n      taskItem: toSubmit\n    }\n    socket.emit('employee submit', submitTaskData, 1);\n  };\n\n  const giveFeedback = (message, task, accepted) => {\n    const ACCEPTED = 'accepted';\n    const REJECTED = 'rejected';\n\n    const submission = findSubmissionByTask(submissions, task.id);\n    const feedback = {\n      ...submission,\n      feedback_string: message,\n      status: accepted ? ACCEPTED : REJECTED\n    }\n    const taskItem = {\n      ...task,\n      status: accepted ? 3 : 1\n    }\n\n    socket.emit('feedback', {feedback, taskItem}, taskItem.employee_id);\n  }\n\n  return {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  };\n}\n","export default function findSubmissionByTask(submissions, tid) {\n  const PENDING  = 'pending';\n  return submissions.find(submission => {\n    return submission.task_id === tid \n      && submission.status === PENDING;\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}