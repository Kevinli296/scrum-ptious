[{"/home/kevin/lighthouse/final-project/scrum-ptious/src/index.js":"1","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/App.js":"2","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/TaskResource.js":"3","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/UserInfo.js":"4","/home/kevin/lighthouse/final-project/scrum-ptious/src/hooks/useApplicationData.js":"5","/home/kevin/lighthouse/final-project/scrum-ptious/src/helpers/taskStatus.js":"6","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/index.js":"7","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/index.js":"8","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Login/index.js":"9","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/index.js":"10","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Sidebar/index.js":"11","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/DeadlineList.js":"12","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/ProjectProgress.js":"13","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/IndependentProgress.js":"14","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/PerformanceReview.js":"15","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/ChatLog.js":"16","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/InputBox.js":"17","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/MembersList.js":"18","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskProgress.js":"19","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskResource.js":"20","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Sidebar/SidebarItem.js":"21","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/DeadlineListItem.js":"22","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/ChatLogItem.js":"23","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/MembersListItem.js":"24","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskItem.js":"25","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/MyTeam.js":"26","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/MyTeamItem.js":"27","/home/kevin/lighthouse/final-project/scrum-ptious/src/utilities/format-date.js":"28","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/NewTaskItem.js":"29","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/EmployeeProgress.js":"30","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/EmployeeProgressItem.js":"31"},{"size":184,"mtime":1610791955086,"results":"32","hashOfConfig":"33"},{"size":2483,"mtime":1611282637266,"results":"34","hashOfConfig":"33"},{"size":118,"mtime":1610851351848,"results":"35","hashOfConfig":"33"},{"size":682,"mtime":1611225429788,"results":"36","hashOfConfig":"33"},{"size":2696,"mtime":1611271519416,"results":"37","hashOfConfig":"33"},{"size":993,"mtime":1611294367168,"results":"38","hashOfConfig":"33"},{"size":2035,"mtime":1611294161562,"results":"39","hashOfConfig":"33"},{"size":3099,"mtime":1611277776100,"results":"40","hashOfConfig":"33"},{"size":340,"mtime":1611136494645,"results":"41","hashOfConfig":"33"},{"size":1053,"mtime":1611271519416,"results":"42","hashOfConfig":"33"},{"size":1662,"mtime":1611127286612,"results":"43","hashOfConfig":"33"},{"size":638,"mtime":1611225429788,"results":"44","hashOfConfig":"33"},{"size":1509,"mtime":1611271519416,"results":"45","hashOfConfig":"33"},{"size":4155,"mtime":1611026748880,"results":"46","hashOfConfig":"33"},{"size":127,"mtime":1611025494789,"results":"47","hashOfConfig":"33"},{"size":767,"mtime":1611277776100,"results":"48","hashOfConfig":"33"},{"size":694,"mtime":1611121726895,"results":"49","hashOfConfig":"33"},{"size":625,"mtime":1611225429788,"results":"50","hashOfConfig":"33"},{"size":4498,"mtime":1611202388991,"results":"51","hashOfConfig":"33"},{"size":118,"mtime":1610856218738,"results":"52","hashOfConfig":"33"},{"size":366,"mtime":1610951789812,"results":"53","hashOfConfig":"33"},{"size":265,"mtime":1611040603569,"results":"54","hashOfConfig":"33"},{"size":497,"mtime":1611277776100,"results":"55","hashOfConfig":"33"},{"size":553,"mtime":1611225429788,"results":"56","hashOfConfig":"33"},{"size":1663,"mtime":1611271519416,"results":"57","hashOfConfig":"33"},{"size":774,"mtime":1611121726895,"results":"58","hashOfConfig":"33"},{"size":420,"mtime":1611121726895,"results":"59","hashOfConfig":"33"},{"size":331,"mtime":1611131158444,"results":"60","hashOfConfig":"33"},{"size":2395,"mtime":1611127286612,"results":"61","hashOfConfig":"33"},{"size":720,"mtime":1611297360369,"results":"62","hashOfConfig":"33"},{"size":1280,"mtime":1611297374254,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"o8h0i7",{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kevin/lighthouse/final-project/scrum-ptious/src/index.js",[],["138","139"],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/App.js",["140","141","142","143","144","145","146","147","148","149","150"],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/TaskResource.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/UserInfo.js",["151"],"import React from 'react';\n\nimport DeadlineList from './DeadlineList';\n\nconst roles = {\n  1: \"Project Manager\",\n  2: \"Employee\"\n}\n\nexport default function UserInfo(props) {\n  return (\n    <div className=\"user-info\">\n\n      { !props.userInfo && <h1>Please login with your user ID to continue</h1> }\n      { props.userInfo && ( \n        <>\n        <h1>User</h1> \n        <img src=\"https://randomuser.me/api/portraits/men/73.jpg\" className=\"user-avatar\"></img>\n        <h4>{props.userInfo.name} </h4>\n        <h5>{roles[props.userInfo.role]}</h5>\n        <div>\n          <DeadlineList userDeadlines={props.deadlines} />\n        </div>\n        </>\n        ) \n      }\n      \n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/hooks/useApplicationData.js",["152","153"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useApplicationData(props) {\n  const [state, setState] = useState({\n    user: 0,\n    menu: \"Dashboard\",\n    tasks: [],\n    userInfo: {},\n    taskItem: [],\n    role: 0,\n    team: 0,\n    teamTasks: [],\n    teamUsers: [],\n    allTasks: [],\n    deadlines: []\n  })\n  \n  const GET_ALL_TASKS = `http://localhost:8080/api/tasks/`;\n  const GET_USER_INFO = `http://localhost:8080/api/employees/${state.user}`;\n  const GET_TASKS = `http://localhost:8080/api/tasks/user/${state.user}`;\n  const GET_TEAM_TASKS = `http://localhost:8080/api/tasks/team/${state.team}`;\n  const GET_TEAM_USERS = `http://localhost:8080/api/employees/team/${state.team}`;\n  const GET_USER_DEADLINES = `http://localhost:8080/api/tasks/deadlines/${state.user}`;\n\n  const setMenu = menu => setState({...state, menu});\n  const setUser = user => setState({...state, user});\n  const setTaskItem = taskItem => setState({...state, taskItem});\n  const setTasks = tasks => setState({...state, tasks});\n  const setTeamTasks = teamTasks => setState({...state, teamTasks});\n  const setAllTasks = allTasks => setState({...state, allTasks});\n\n  console.log(state);\n\n  useEffect(() => {\n\n    Promise.all([\n      axios.get(GET_TASKS),\n      axios.get(GET_USER_INFO),\n      axios.get(GET_TEAM_TASKS),\n      axios.get(GET_TEAM_USERS),\n      axios.get(GET_USER_DEADLINES)\n    ]).then(all => {\n      if (state.user !== 0) {\n      setState(prev => ({ ...prev, tasks: all[0].data, userInfo: all[1].data[0], role: all[1].data[0]['role'], team: all[1].data[0]['team_id'], teamTasks: all[2].data, teamUsers: all[3].data, allTasks: all[2].data, deadlines: all[4].data }))\n      }\n    })\n    .catch(e => console.log(e));\n  }, [state.user, state.team, state.teamTasks])\n\n\n  function createTaskItem(taskItem) {\n    let task = {...taskItem, projecttask_id: state.team }\n\n    return axios.put(`http://localhost:8080/api/tasks`, task)\n    .then(res => {\n      const id = res.data.id;\n      task = {...task, id: id};\n      const tmp = [...state.teamTasks];\n      tmp.push(task);\n      setState(prev => ({...prev, teamTasks: tmp}))\n    })\n    .catch(e => console.log(e));\n  }\n\n  function editTaskItem(id, taskItem) {\n    console.log(id)\n    console.log(taskItem);\n  }\n\n  function deleteTaskItem(id) {\n    return axios.delete(`http://localhost:8080/api/tasks/${id}`)\n    .then(() => {\n      console.log('success');\n    })\n  }\n\n  return { state, setMenu, setUser, setTaskItem, setTasks, setTeamTasks, setAllTasks, createTaskItem, editTaskItem, deleteTaskItem }\n\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/helpers/taskStatus.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/index.js",["154","155","156"],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/index.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Login/index.js",["157"],"import React, { useState } from 'react';\n\nexport default function Login(props) {\n\n  return (\n    <form>\n      <h1>Enter your user ID: </h1>\n      <input\n        onChange={event => props.setUser(event.target.value)}\n      />\n      <button\n        onSubmit={event => props.setUser(event.target.value)}\n      >Submit</button>\n    </form>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/index.js",["158"],"import React, { useState } from 'react';\n\n\n// import ProjectProgress from './ProjectProgress';\nimport TaskProgress from './TaskProgress';\nimport MyTeam from './MyTeam';\nimport TaskResource from './TaskResource';\n// import UserInfo from './UserInfo';\n\n// import '../../styles/Dashboard.css';\n\nexport default function Tasks(props) {\n\n  return (\n    <div className='dashboard'>\n\n\n      <div className=\"dashboard-top\">\n        <TaskProgress tasks={props.tasks} setTaskItem={props.setTaskItem} role={props.role} teamTasks={props.teamTasks} tasks={props.tasks} setTasks={props.setTasks} createTaskItem={props.createTaskItem} deleteTaskItem={props.deleteTaskItem} />\n      </div>\n      <div className=\"dashboard-bottom\">\n        { props.role === 1 && <MyTeam getUserTasks={props.getUserTasks} user={props.user} teamUsers={props.teamUsers} tasks={props.tasks} setTasks={props.setTasks} teamTasks={props.teamTasks} setTeamTasks={props.setTeamTasks} />}\n        { props.role === 2 && <TaskResource />}\n      </div>\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Sidebar/index.js",["159","160","161","162","163","164","165","166","167","168","169"],"import React from 'react';\nimport { ProSidebar, SidebarHeader, SidebarFooter, SidebarContent, Menu, MenuItem } from 'react-pro-sidebar';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport SidebarItem from './SidebarItem';\nimport classNames from 'classnames';\n\nconst menuItems = [\n  {\n    name: 'Dashboard'\n  },\n  {\n    name: 'Tasks'\n  },\n  {\n    name: 'Chat'\n  }\n];\n\nconst managerMenuItems = [\n  {\n    name: 'Dashboard'\n  },\n  {\n    name: 'Tasks'\n  },\n  {\n    name: 'Chat'\n  },\n  {\n    name: 'Performance Review'\n  }\n]\n\nexport default function Sidebar(props) {\n  const menuClass = classNames(\"sidebar__item\", {\n    'sidebar__item--selected': props.selected\n  })\n\n  // console.log(props)\n\n  return (\n    <ul>\n     { props.userInfo && props.userInfo.role === 2 && menuItems.map(menu => {\n        return (\n          <SidebarItem\n            key={menu.name}\n            name={menu.name}\n            selected={menu.name === props.menu}\n            setMenu={props.setMenu}\n          />\n        )\n      }) }\n\n      { props.userInfo && props.userInfo.role === 1 && managerMenuItems.map(menu => {\n        return (\n          <SidebarItem\n            key={menu.name}\n            name={menu.name}\n            selected={menu.name === props.menu}\n            setMenu={props.setMenu}\n          />\n        )\n      }) } \n\n      \n    </ul>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/DeadlineList.js",["170","171"],"import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\n\nimport DeadlineListItem from './DeadlineListItem';\n\nconst deadlines = [\n  {\n  \"id\": 1,\n  \"title\": \"Create ERD\",\n  \"description\": \"Design ERD to base schema off of\",\n  \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n  \"due_date\": \"2021-01-07T01:00:00.000Z\",\n  \"employee_id\": 3,\n  \"status\": 0,\n  \"is_viewed\": false\n  },\n  {\n  \"id\": 2,\n  \"title\": \"Create seeds\",\n  \"description\": \"Insert into tables in database dummy data for testing\",\n  \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n  \"due_date\": \"2021-01-08T01:00:00.000Z\",\n  \"employee_id\": 2,\n  \"status\": 1,\n  \"is_viewed\": true\n  },\n  {\n  \"id\": 3,\n  \"title\": \"Setup project skeleton\",\n  \"description\": \"Install packages and write boiler plate code\",\n  \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n  \"due_date\": \"2021-01-18T01:00:00.000Z\",\n  \"employee_id\": 1,\n  \"status\": 2,\n  \"is_viewed\": false\n  },\n  {\n    \"id\": 4,\n    \"title\": \"Setup project skeleton\",\n    \"description\": \"Install packages and write boiler plate code\",\n    \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n    \"due_date\": \"2021-01-20T01:00:00.000Z\",\n    \"employee_id\": 1,\n    \"status\": 3,\n    \"is_viewed\": false\n  }\n]\n\nexport default function DeadlineList(props) {\n\n  const allDeadlines = props.userDeadlines.map((deadline) => {\n    return (\n      <li className=\"task-in-progress\">\n      <DeadlineListItem\n        key={deadline.id}\n        title={deadline.title}\n        description={deadline.description}\n        due_date={deadline.due_date}\n        creation_date={deadline.creation_date}\n      />\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"task-progress\">\n      <ul>\n        {allDeadlines}\n      </ul>\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/ProjectProgress.js",["172"],"import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\n// import ProjectProgressListItem from './ProjectProgressListItem';\n\nexport default function ProjectProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.projectTasks);\n  const inProgressTasks = taskStatus(1, props.projectTasks);\n  const inReviewTasks = taskStatus(2, props.projectTasks);\n  const completeTasks = taskStatus(3, props.projectTasks);\n  const lateTasks = lateTaskStatus(props.projectTasks);\n\n\n  return (\n    <div className=\"task-progress\">\n      <Doughnut\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(28, 20, 255, 0.8)',\n                'rgba(255, 247, 20, 0.8)',\n                'rgba(232, 86, 2, 0.8)',\n                'rgba(255, 20, 20, 0.8)',\n                'rgba(33, 232, 2, 0.8)',\n              ]\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Project Progress',\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/IndependentProgress.js",["173"],"import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\n// import ProjectProgressListItem from './ProjectProgressListItem';\n\n// const independentTasks = [\n//   {\n//   \"id\": 1,\n//   \"title\": \"Create ERD\",\n//   \"description\": \"Design ERD to base schema off of\",\n//   \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//   \"due_date\": \"2021-01-21T01:00:00.000Z\",\n//   \"employee_id\": 3,\n//   \"status\": 0,\n//   \"is_viewed\": false\n//   },\n//   {\n//   \"id\": 2,\n//   \"title\": \"Create seeds\",\n//   \"description\": \"Insert into tables in database dummy data for testing\",\n//   \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//   \"due_date\": \"2021-01-16T01:00:00.000Z\",\n//   \"employee_id\": 2,\n//   \"status\": 2,\n//   \"is_viewed\": true\n//   },\n//   {\n//   \"id\": 3,\n//   \"title\": \"Setup project skeleton\",\n//   \"description\": \"Install packages and write boiler plate code\",\n//   \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//   \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//   \"employee_id\": 1,\n//   \"status\": 2,\n//   \"is_viewed\": false\n//   },\n//   {\n//     \"id\": 4,\n//     \"title\": \"Setup project skeleton\",\n//     \"description\": \"Install packages and write boiler plate code\",\n//     \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//     \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//     \"employee_id\": 1,\n//     \"status\": 3,\n//     \"is_viewed\": false\n//   },\n//   {\n//     \"id\": 5,\n//     \"title\": \"Setup project skeleton\",\n//     \"description\": \"Install packages and write boiler plate code\",\n//     \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//     \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//     \"employee_id\": 1,\n//     \"status\": 4,\n//     \"is_viewed\": false\n//   },\n//   {\n//     \"id\": 8,\n//     \"title\": \"Setup project skeleton\",\n//     \"description\": \"Install packages and write boiler plate code\",\n//     \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//     \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//     \"employee_id\": 1,\n//     \"status\": 4,\n//     \"is_viewed\": false\n//   },\n//   {\n//     \"id\": 10,\n//     \"title\": \"Setup project skeleton\",\n//     \"description\": \"Install packages and write boiler plate code\",\n//     \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//     \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//     \"employee_id\": 1,\n//     \"status\": 1,\n//     \"is_viewed\": false\n//   },\n//   {\n//     \"id\": 10,\n//     \"title\": \"Setup project skeleton\",\n//     \"description\": \"Install packages and write boiler plate code\",\n//     \"creation_date\": \"2021-01-16T15:41:01.771Z\",\n//     \"due_date\": \"2021-01-11T01:00:00.000Z\",\n//     \"employee_id\": 1,\n//     \"status\": 2,\n//     \"is_viewed\": false\n//   }\n// ]\n\nexport default function IndependentProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.independentTasks);\n  const inProgressTasks = taskStatus(1, props.independentTasks);\n  const inReviewTasks = taskStatus(2, props.independentTasks);\n  const completeTasks = taskStatus(3, props.independentTasks);\n  const lateTasks = lateTaskStatus(props.independentTasks);\n\n\n  return (\n    <div className=\"task-progress\">\n      <Bar\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(28, 20, 255, 0.8)',\n                'rgba(255, 247, 20, 0.8)',\n                'rgba(232, 86, 2, 0.8)',\n                'rgba(255, 20, 20, 0.8)',\n                'rgba(33, 232, 2, 0.8)',\n              ]\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Your Progress',\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }}\n      />\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/PerformanceReview.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/ChatLog.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/InputBox.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/MembersList.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskProgress.js",["174","175","176","177","178","179"],"import React from 'react';\n\nimport TaskItem from './TaskItem';\n\nexport default function TaskProgress(props) {\n\n  // console.log(\"from task view\", props.tasks)\n\n  return (\n    <div className=\"task-progress\">\n      <div className=\"task-assigned\">\n        <h1>Assigned</h1>\n        { props.role === 1 && props.teamTasks.map((item, index) => {\n          if (item.status === 0) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n        { props.role === 2 && props.tasks.map((item, index) => {\n          if (item.status === 0) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n      </div>\n\n      <div className=\"task-in-progress\">\n      <h1>In-Progress</h1>\n        { props.role === 1 && props.teamTasks.map((item, index) => {\n          if (item.status === 1 || item.status === 2) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n        { props.role === 2 && props.tasks.map((item, index) => {\n          if (item.status === 1 || item.status === 2) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n      </div>\n\n      <div className=\"task-completed\">\n      <h1>Completed</h1>\n        { props.role === 1 && props.teamTasks.map((item, index) => {\n          if (item.status === 3) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n        { props.role === 2 && props.tasks.map((item, index) => {\n          if (item.status === 3) {\n            return (\n              <TaskItem \n                key={item.id}\n                id={item.id}\n                title={item.title}\n                description={item.description}\n                due_date={item.due_date}\n                setTaskItem={props.setTaskItem}\n                role={props.role}\n                assignedTo={item.employee_id}\n                createTaskItem={props.createTaskItem}\n                teamUsers={props.teamUsers}\n                deleteTaskItem={props.deleteTaskItem}\n              />\n            )\n          }\n        }) }\n      </div>\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskResource.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Sidebar/SidebarItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/DeadlineListItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/ChatLogItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Chat/MembersListItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/TaskItem.js",["180"],"import React, { useState } from 'react';\n// import { taskStatus } from '../../helpers/taskStatus';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default function TaskItem(props) {\n  const [show, setShow] = useState(false);\n  const [desc, setDesc] = useState(props.description);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  return (\n    <>\n      <li\n        onClick={() => props.setTaskItem(props), handleShow}\n      >\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n        <h6>Assigned on: {props.due_date}</h6>\n      </li>\n      {props.role === 1 && \n        <form\n          onSubmit={event => event.preventDefault()}\n        >\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <input\n            value={desc}\n            onChange={(event) => setDesc(event.target.value)}\n            type=\"text\"\n            />\n            </Modal.Body>\n            <Modal.Body>\n              <p>db id: {props.id}</p>\n              <p>Assigned to: {props.assignedTo}</p>\n              <p>On: {props.due_date}</p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={handleClose}>\n                Delete\n              </Button>\n              <Button confirm variant=\"primary\" onClick={() => props.editTaskItem(props.id, desc)}>\n                Edit\n              </Button>\n            </Modal.Footer>\n          </Modal>\n      </form>\n      }\n    </>\n\n    \n  )\n  \n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/MyTeam.js",["181"],"import React from 'react';\nimport axios from 'axios';\n\nimport MyTeamItem from './MyTeamItem';\n\nexport default function MyTeam(props) {\n\n  const teamMembers = props.teamUsers.map((member) => {\n    return (\n    <li className=\"task-in-progress\">\n    <MyTeamItem\n      key={member.id}\n      id={member.id}\n      name={member.name}\n      email={member.email}\n      phone_number={member.phone_number}\n      role={member.role}\n      setTasks={props.setTasks}\n      tasks={props.tasks}\n      setTeamTasks={props.setTeamTasks}\n      teamTasks={props.teamTasks}\n      user={props.user}\n      getUserTasks={props.getUserTasks}\n    />\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"task-progress\">\n      <h1>My Team</h1>\n      <ul>\n      {teamMembers}\n      </ul>\n    </div>\n  )\n}","/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/MyTeamItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/utilities/format-date.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Tasks/NewTaskItem.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/EmployeeProgress.js",[],"/home/kevin/lighthouse/final-project/scrum-ptious/src/components/Dashboard/EmployeeProgressItem.js",["182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"187","severity":1,"message":"191","line":2,"column":20,"nodeType":"189","messageId":"190","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"192","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":15},{"ruleId":"187","severity":1,"message":"193","line":3,"column":34,"nodeType":"189","messageId":"190","endLine":3,"endColumn":40},{"ruleId":"187","severity":1,"message":"194","line":3,"column":42,"nodeType":"189","messageId":"190","endLine":3,"endColumn":48},{"ruleId":"187","severity":1,"message":"195","line":3,"column":50,"nodeType":"189","messageId":"190","endLine":3,"endColumn":60},{"ruleId":"187","severity":1,"message":"196","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":13},{"ruleId":"187","severity":1,"message":"197","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":13},{"ruleId":"187","severity":1,"message":"198","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":12},{"ruleId":"187","severity":1,"message":"199","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":20},{"ruleId":"187","severity":1,"message":"200","line":15,"column":10,"nodeType":"189","messageId":"190","endLine":15,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":18,"column":9,"nodeType":"203","endLine":18,"endColumn":91},{"ruleId":"187","severity":1,"message":"204","line":18,"column":9,"nodeType":"189","messageId":"190","endLine":18,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":48,"column":6,"nodeType":"207","endLine":48,"endColumn":30,"suggestions":"208"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":22,"column":32,"nodeType":"211","messageId":"212","endLine":22,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":39,"column":198,"nodeType":"215","endLine":39,"endColumn":217},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"216","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":20},{"ruleId":"187","severity":1,"message":"217","line":2,"column":22,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"187","severity":1,"message":"218","line":2,"column":37,"nodeType":"189","messageId":"190","endLine":2,"endColumn":50},{"ruleId":"187","severity":1,"message":"219","line":2,"column":52,"nodeType":"189","messageId":"190","endLine":2,"endColumn":66},{"ruleId":"187","severity":1,"message":"220","line":2,"column":68,"nodeType":"189","messageId":"190","endLine":2,"endColumn":72},{"ruleId":"187","severity":1,"message":"221","line":2,"column":74,"nodeType":"189","messageId":"190","endLine":2,"endColumn":82},{"ruleId":"187","severity":1,"message":"193","line":3,"column":27,"nodeType":"189","messageId":"190","endLine":3,"endColumn":33},{"ruleId":"187","severity":1,"message":"192","line":3,"column":35,"nodeType":"189","messageId":"190","endLine":3,"endColumn":40},{"ruleId":"187","severity":1,"message":"222","line":3,"column":42,"nodeType":"189","messageId":"190","endLine":3,"endColumn":46},{"ruleId":"187","severity":1,"message":"223","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":14},{"ruleId":"187","severity":1,"message":"224","line":37,"column":9,"nodeType":"189","messageId":"190","endLine":37,"endColumn":18},{"ruleId":"187","severity":1,"message":"225","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"187","severity":1,"message":"226","line":2,"column":20,"nodeType":"189","messageId":"190","endLine":2,"endColumn":23},{"ruleId":"187","severity":1,"message":"226","line":2,"column":20,"nodeType":"189","messageId":"190","endLine":2,"endColumn":23},{"ruleId":"187","severity":1,"message":"225","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"209","severity":1,"message":"227","line":13,"column":65,"nodeType":"211","messageId":"228","endLine":13,"endColumn":67},{"ruleId":"209","severity":1,"message":"227","line":32,"column":61,"nodeType":"211","messageId":"228","endLine":32,"endColumn":63},{"ruleId":"209","severity":1,"message":"227","line":55,"column":65,"nodeType":"211","messageId":"228","endLine":55,"endColumn":67},{"ruleId":"209","severity":1,"message":"227","line":74,"column":61,"nodeType":"211","messageId":"228","endLine":74,"endColumn":63},{"ruleId":"209","severity":1,"message":"227","line":97,"column":65,"nodeType":"211","messageId":"228","endLine":97,"endColumn":67},{"ruleId":"209","severity":1,"message":"227","line":116,"column":61,"nodeType":"211","messageId":"228","endLine":116,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":17,"column":48,"nodeType":"231","messageId":"232","endLine":17,"endColumn":49},{"ruleId":"187","severity":1,"message":"196","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":13},{"ruleId":"187","severity":1,"message":"225","line":2,"column":11,"nodeType":"189","messageId":"190","endLine":2,"endColumn":19},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","'axios' is defined but never used.","'Tasks' is defined but never used.","'Chat' is defined but never used.","'TaskResource' is defined but never used.","'taskStatus' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GET_ALL_TASKS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GET_TASKS', 'GET_TEAM_TASKS', 'GET_TEAM_USERS', and 'GET_USER_INFO'. Either include them or remove the dependency array.","ArrayExpression",["235"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ProSidebar' is defined but never used.","'SidebarHeader' is defined but never used.","'SidebarFooter' is defined but never used.","'SidebarContent' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Link' is defined but never used.","'Moment' is defined but never used.","'menuClass' is assigned a value but never used.","'Doughnut' is defined but never used.","'Bar' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},"Update the dependencies array to be: [state.user, state.team, GET_TASKS, GET_USER_INFO, GET_TEAM_TASKS, GET_TEAM_USERS]",{"range":"238","text":"239"},[1644,1668],"[state.user, state.team, GET_TASKS, GET_USER_INFO, GET_TEAM_TASKS, GET_TEAM_USERS]"]